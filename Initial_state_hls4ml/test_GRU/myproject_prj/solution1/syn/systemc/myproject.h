// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pointwise_conv_1d_latency_cl_0_0_0_0_0.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 48
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > input_1_V_ap_vld;
    sc_in< sc_lv<800> > input_1_V;
    sc_out< sc_lv<16> > layer4_out_0_V;
    sc_out< sc_logic > layer4_out_0_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_1_V;
    sc_out< sc_logic > layer4_out_1_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_2_V;
    sc_out< sc_logic > layer4_out_2_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_3_V;
    sc_out< sc_logic > layer4_out_3_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_4_V;
    sc_out< sc_logic > layer4_out_4_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_5_V;
    sc_out< sc_logic > layer4_out_5_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_6_V;
    sc_out< sc_logic > layer4_out_6_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_7_V;
    sc_out< sc_logic > layer4_out_7_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_8_V;
    sc_out< sc_logic > layer4_out_8_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_9_V;
    sc_out< sc_logic > layer4_out_9_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_10_V;
    sc_out< sc_logic > layer4_out_10_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_11_V;
    sc_out< sc_logic > layer4_out_11_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_12_V;
    sc_out< sc_logic > layer4_out_12_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_13_V;
    sc_out< sc_logic > layer4_out_13_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_14_V;
    sc_out< sc_logic > layer4_out_14_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_15_V;
    sc_out< sc_logic > layer4_out_15_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_16_V;
    sc_out< sc_logic > layer4_out_16_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_17_V;
    sc_out< sc_logic > layer4_out_17_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_18_V;
    sc_out< sc_logic > layer4_out_18_V_ap_vld;
    sc_out< sc_lv<16> > layer4_out_19_V;
    sc_out< sc_logic > layer4_out_19_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pointwise_conv_1d_latency_cl_0_0_0_0_0* grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > input_1_V_ap_vld_in_sig;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<800> > input_1_V_preg;
    sc_signal< sc_lv<800> > input_1_V_in_sig;
    sc_signal< sc_logic > input_1_V_ap_vld_preg;
    sc_signal< sc_logic > input_1_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_0;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_1;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_2;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_3;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_4;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_5;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_6;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_7;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_8;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_9;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_10;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_11;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_12;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_13;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_14;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_15;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_16;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_17;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_18;
    sc_signal< sc_lv<16> > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_return_19;
    sc_signal< sc_logic > grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call26;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call26;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call26;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call26;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4_ignore_call26;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5_ignore_call26;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp8;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to4;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<800> ap_const_lv800_lc_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp8();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call26();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call26();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call26();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call26();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state5_pp0_stage0_iter4_ignore_call26();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state6_pp0_stage0_iter5_ignore_call26();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to4();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_grp_pointwise_conv_1d_latency_cl_0_0_0_0_0_fu_214_ap_ce();
    void thread_input_1_V_ap_vld_in_sig();
    void thread_input_1_V_blk_n();
    void thread_input_1_V_in_sig();
    void thread_layer4_out_0_V();
    void thread_layer4_out_0_V_ap_vld();
    void thread_layer4_out_10_V();
    void thread_layer4_out_10_V_ap_vld();
    void thread_layer4_out_11_V();
    void thread_layer4_out_11_V_ap_vld();
    void thread_layer4_out_12_V();
    void thread_layer4_out_12_V_ap_vld();
    void thread_layer4_out_13_V();
    void thread_layer4_out_13_V_ap_vld();
    void thread_layer4_out_14_V();
    void thread_layer4_out_14_V_ap_vld();
    void thread_layer4_out_15_V();
    void thread_layer4_out_15_V_ap_vld();
    void thread_layer4_out_16_V();
    void thread_layer4_out_16_V_ap_vld();
    void thread_layer4_out_17_V();
    void thread_layer4_out_17_V_ap_vld();
    void thread_layer4_out_18_V();
    void thread_layer4_out_18_V_ap_vld();
    void thread_layer4_out_19_V();
    void thread_layer4_out_19_V_ap_vld();
    void thread_layer4_out_1_V();
    void thread_layer4_out_1_V_ap_vld();
    void thread_layer4_out_2_V();
    void thread_layer4_out_2_V_ap_vld();
    void thread_layer4_out_3_V();
    void thread_layer4_out_3_V_ap_vld();
    void thread_layer4_out_4_V();
    void thread_layer4_out_4_V_ap_vld();
    void thread_layer4_out_5_V();
    void thread_layer4_out_5_V_ap_vld();
    void thread_layer4_out_6_V();
    void thread_layer4_out_6_V_ap_vld();
    void thread_layer4_out_7_V();
    void thread_layer4_out_7_V_ap_vld();
    void thread_layer4_out_8_V();
    void thread_layer4_out_8_V_ap_vld();
    void thread_layer4_out_9_V();
    void thread_layer4_out_9_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
