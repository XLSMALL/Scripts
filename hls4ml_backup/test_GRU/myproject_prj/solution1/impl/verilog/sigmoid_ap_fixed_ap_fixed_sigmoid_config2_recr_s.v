// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] sigmoid_table2_address0;
reg    sigmoid_table2_ce0;
wire   [9:0] sigmoid_table2_q0;
wire   [9:0] sigmoid_table2_address1;
reg    sigmoid_table2_ce1;
wire   [9:0] sigmoid_table2_q1;
wire   [12:0] select_ln850_fu_157_p3;
reg   [12:0] select_ln850_reg_377;
wire   [11:0] trunc_ln147_fu_165_p1;
reg   [11:0] trunc_ln147_reg_382;
wire   [12:0] select_ln850_1_fu_229_p3;
reg   [12:0] select_ln850_1_reg_387;
wire   [11:0] trunc_ln147_1_fu_237_p1;
reg   [11:0] trunc_ln147_1_reg_392;
wire   [9:0] select_ln149_fu_287_p3;
reg   [9:0] select_ln149_reg_397;
wire   [9:0] select_ln149_1_fu_341_p3;
reg   [9:0] select_ln149_1_reg_402;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln150_fu_349_p1;
wire   [63:0] zext_ln150_1_fu_353_p1;
wire   [11:0] tmp_fu_105_p4;
wire   [25:0] shl_ln_fu_97_p3;
wire   [3:0] trunc_ln851_fu_125_p1;
wire   [9:0] p_Result_4_fu_129_p3;
wire  signed [12:0] sext_ln850_fu_115_p1;
wire   [0:0] icmp_ln851_fu_137_p2;
wire   [12:0] add_ln700_fu_143_p2;
wire   [0:0] icmp_ln850_fu_119_p2;
wire   [12:0] select_ln851_fu_149_p3;
wire   [11:0] tmp_3_fu_177_p4;
wire   [25:0] shl_ln1118_1_fu_169_p3;
wire   [3:0] trunc_ln851_1_fu_197_p1;
wire   [9:0] p_Result_4_1_fu_201_p3;
wire  signed [12:0] sext_ln850_1_fu_187_p1;
wire   [0:0] icmp_ln851_1_fu_209_p2;
wire   [12:0] add_ln700_1_fu_215_p2;
wire   [0:0] icmp_ln850_1_fu_191_p2;
wire   [12:0] select_ln851_1_fu_221_p3;
wire   [12:0] add_ln147_fu_241_p2;
wire   [0:0] tmp_4_fu_251_p3;
wire   [11:0] add_ln147_2_fu_246_p2;
wire   [11:0] select_ln148_fu_259_p3;
wire   [1:0] tmp_5_fu_271_p4;
wire   [0:0] icmp_ln149_fu_281_p2;
wire   [9:0] trunc_ln148_fu_267_p1;
wire   [12:0] add_ln147_1_fu_295_p2;
wire   [0:0] tmp_6_fu_305_p3;
wire   [11:0] add_ln147_3_fu_300_p2;
wire   [11:0] select_ln148_1_fu_313_p3;
wire   [1:0] tmp_7_fu_325_p4;
wire   [0:0] icmp_ln149_1_fu_335_p2;
wire   [9:0] trunc_ln148_1_fu_321_p1;
wire   [15:0] zext_ln703_fu_357_p1;
wire   [15:0] zext_ln703_1_fu_361_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_sigmoid_bkb #(
    .DataWidth( 10 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
sigmoid_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sigmoid_table2_address0),
    .ce0(sigmoid_table2_ce0),
    .q0(sigmoid_table2_q0),
    .address1(sigmoid_table2_address1),
    .ce1(sigmoid_table2_ce1),
    .q1(sigmoid_table2_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln149_1_reg_402 <= select_ln149_1_fu_341_p3;
        select_ln149_reg_397 <= select_ln149_fu_287_p3;
        select_ln850_1_reg_387 <= select_ln850_1_fu_229_p3;
        select_ln850_reg_377 <= select_ln850_fu_157_p3;
        trunc_ln147_1_reg_392 <= trunc_ln147_1_fu_237_p1;
        trunc_ln147_reg_382 <= trunc_ln147_fu_165_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sigmoid_table2_ce0 = 1'b1;
    end else begin
        sigmoid_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sigmoid_table2_ce1 = 1'b1;
    end else begin
        sigmoid_table2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln147_1_fu_295_p2 = (13'd512 + select_ln850_1_reg_387);

assign add_ln147_2_fu_246_p2 = (12'd512 + trunc_ln147_reg_382);

assign add_ln147_3_fu_300_p2 = (12'd512 + trunc_ln147_1_reg_392);

assign add_ln147_fu_241_p2 = (13'd512 + select_ln850_reg_377);

assign add_ln700_1_fu_215_p2 = ($signed(13'd1) + $signed(sext_ln850_1_fu_187_p1));

assign add_ln700_fu_143_p2 = ($signed(13'd1) + $signed(sext_ln850_fu_115_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = zext_ln703_fu_357_p1;

assign ap_return_1 = zext_ln703_1_fu_361_p1;

assign icmp_ln149_1_fu_335_p2 = ((tmp_7_fu_325_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_281_p2 = ((tmp_5_fu_271_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_1_fu_191_p2 = (($signed(shl_ln1118_1_fu_169_p3) < $signed(26'd67108849)) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_119_p2 = (($signed(shl_ln_fu_97_p3) < $signed(26'd67108849)) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_209_p2 = ((p_Result_4_1_fu_201_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_137_p2 = ((p_Result_4_fu_129_p3 == 10'd0) ? 1'b1 : 1'b0);

assign p_Result_4_1_fu_201_p3 = {{trunc_ln851_1_fu_197_p1}, {6'd0}};

assign p_Result_4_fu_129_p3 = {{trunc_ln851_fu_125_p1}, {6'd0}};

assign select_ln148_1_fu_313_p3 = ((tmp_6_fu_305_p3[0:0] === 1'b1) ? 12'd0 : add_ln147_3_fu_300_p2);

assign select_ln148_fu_259_p3 = ((tmp_4_fu_251_p3[0:0] === 1'b1) ? 12'd0 : add_ln147_2_fu_246_p2);

assign select_ln149_1_fu_341_p3 = ((icmp_ln149_1_fu_335_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln148_1_fu_321_p1);

assign select_ln149_fu_287_p3 = ((icmp_ln149_fu_281_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln148_fu_267_p1);

assign select_ln850_1_fu_229_p3 = ((icmp_ln850_1_fu_191_p2[0:0] === 1'b1) ? select_ln851_1_fu_221_p3 : sext_ln850_1_fu_187_p1);

assign select_ln850_fu_157_p3 = ((icmp_ln850_fu_119_p2[0:0] === 1'b1) ? select_ln851_fu_149_p3 : sext_ln850_fu_115_p1);

assign select_ln851_1_fu_221_p3 = ((icmp_ln851_1_fu_209_p2[0:0] === 1'b1) ? sext_ln850_1_fu_187_p1 : add_ln700_1_fu_215_p2);

assign select_ln851_fu_149_p3 = ((icmp_ln851_fu_137_p2[0:0] === 1'b1) ? sext_ln850_fu_115_p1 : add_ln700_fu_143_p2);

assign sext_ln850_1_fu_187_p1 = $signed(tmp_3_fu_177_p4);

assign sext_ln850_fu_115_p1 = $signed(tmp_fu_105_p4);

assign shl_ln1118_1_fu_169_p3 = {{data_1_V_read}, {10'd0}};

assign shl_ln_fu_97_p3 = {{data_0_V_read}, {10'd0}};

assign sigmoid_table2_address0 = zext_ln150_fu_349_p1;

assign sigmoid_table2_address1 = zext_ln150_1_fu_353_p1;

assign tmp_3_fu_177_p4 = {{data_1_V_read[15:4]}};

assign tmp_4_fu_251_p3 = add_ln147_fu_241_p2[32'd12];

assign tmp_5_fu_271_p4 = {{select_ln148_fu_259_p3[11:10]}};

assign tmp_6_fu_305_p3 = add_ln147_1_fu_295_p2[32'd12];

assign tmp_7_fu_325_p4 = {{select_ln148_1_fu_313_p3[11:10]}};

assign tmp_fu_105_p4 = {{data_0_V_read[15:4]}};

assign trunc_ln147_1_fu_237_p1 = select_ln850_1_fu_229_p3[11:0];

assign trunc_ln147_fu_165_p1 = select_ln850_fu_157_p3[11:0];

assign trunc_ln148_1_fu_321_p1 = select_ln148_1_fu_313_p3[9:0];

assign trunc_ln148_fu_267_p1 = select_ln148_fu_259_p3[9:0];

assign trunc_ln851_1_fu_197_p1 = data_1_V_read[3:0];

assign trunc_ln851_fu_125_p1 = data_0_V_read[3:0];

assign zext_ln150_1_fu_353_p1 = select_ln149_1_reg_402;

assign zext_ln150_fu_349_p1 = select_ln149_reg_397;

assign zext_ln703_1_fu_361_p1 = sigmoid_table2_q1;

assign zext_ln703_fu_357_p1 = sigmoid_table2_q0;

endmodule //sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s
