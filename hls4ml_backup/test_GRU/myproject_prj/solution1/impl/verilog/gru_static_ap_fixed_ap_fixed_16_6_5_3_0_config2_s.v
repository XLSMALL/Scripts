// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        reset_state,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input   reset_state;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg   [15:0] h_state_V_0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire  signed [15:0] select_ln443_fu_164_p3;
reg  signed [15:0] select_ln443_reg_341;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_2;
reg   [15:0] call_ret1_reg_347_0;
reg   [15:0] call_ret1_reg_347_1;
reg   [15:0] call_ret1_reg_347_2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_2;
reg   [15:0] call_ret_reg_354_0;
reg   [15:0] call_ret_reg_354_1;
reg  signed [15:0] tmpres_state_zr_2_V_reg_360;
wire   [15:0] inputacc_zr_0_V_fu_189_p2;
reg   [15:0] inputacc_zr_0_V_reg_365;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [15:0] inputacc_zr_1_V_fu_195_p2;
reg   [15:0] inputacc_zr_1_V_reg_370;
reg  signed [15:0] tmpres_zr_0_V_reg_375;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg  signed [15:0] tmpres_zr_1_V_reg_381;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire  signed [25:0] grp_fu_271_p2;
reg  signed [25:0] mul_ln1118_reg_406;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [15:0] inputacc_h_0_V_fu_233_p2;
reg   [15:0] inputacc_h_0_V_reg_411;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire  signed [25:0] grp_fu_277_p2;
reg  signed [25:0] mul_ln1192_reg_416;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_port_reg_reset_state;
reg    grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call13;
wire    ap_block_state17_pp0_stage0_iter1_ignore_call13;
reg    ap_block_pp0_stage0_11001_ignoreCallOp32;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call13;
wire    ap_block_state18_pp0_stage1_iter1_ignore_call13;
wire    ap_block_pp0_stage1_11001_ignoreCallOp33;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call13;
wire    ap_block_state19_pp0_stage2_iter1_ignore_call13;
wire    ap_block_pp0_stage2_11001_ignoreCallOp34;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call13;
wire    ap_block_state20_pp0_stage3_iter1_ignore_call13;
wire    ap_block_pp0_stage3_11001_ignoreCallOp35;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call13;
wire    ap_block_state21_pp0_stage4_iter1_ignore_call13;
wire    ap_block_pp0_stage4_11001_ignoreCallOp39;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call13;
wire    ap_block_pp0_stage5_11001_ignoreCallOp41;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_done;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_idle;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ready;
reg    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ce;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_0;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_1;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call23;
wire    ap_block_pp0_stage7_11001_ignoreCallOp50;
wire    ap_block_state9_pp0_stage8_iter0_ignore_call23;
wire    ap_block_pp0_stage8_11001_ignoreCallOp51;
wire    ap_block_state10_pp0_stage9_iter0_ignore_call23;
wire    ap_block_pp0_stage9_11001_ignoreCallOp52;
wire    ap_block_state11_pp0_stage10_iter0_ignore_call23;
wire    ap_block_pp0_stage10_11001_ignoreCallOp53;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_data_V_read;
reg    grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_ce;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call17;
wire    ap_block_state21_pp0_stage4_iter1_ignore_call17;
wire    ap_block_pp0_stage4_11001_ignoreCallOp40;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call17;
wire    ap_block_pp0_stage5_11001_ignoreCallOp42;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_done;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_idle;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ready;
reg    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ce;
wire  signed [10:0] grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_return;
wire    ap_block_state16_pp0_stage15_iter0_ignore_call31;
wire    ap_block_pp0_stage15_11001_ignoreCallOp69;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call31;
wire    ap_block_state17_pp0_stage0_iter1_ignore_call31;
reg    ap_block_pp0_stage0_11001_ignoreCallOp70;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call31;
wire    ap_block_state18_pp0_stage1_iter1_ignore_call31;
wire    ap_block_pp0_stage1_11001_ignoreCallOp71;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call31;
wire    ap_block_state19_pp0_stage2_iter1_ignore_call31;
wire    ap_block_pp0_stage2_11001_ignoreCallOp72;
reg    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage4;
reg    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
reg   [15:0] ap_sig_allocacmp_h_state_V_0_load;
wire   [0:0] select_ln443_fu_164_p0;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage14;
wire   [15:0] trunc_ln_fu_224_p4;
wire  signed [16:0] sext_ln1193_fu_239_p1;
wire  signed [16:0] sub_ln1193_fu_242_p2;
wire  signed [25:0] grp_fu_283_p3;
reg    grp_fu_271_ce;
reg    grp_fu_277_ce;
reg    grp_fu_283_ce;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_reset_start_pp0;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 h_state_V_0 = 16'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg = 1'b0;
#0 grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg = 1'b0;
end

dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_V_read(data_0_V_read),
    .data_1_V_read(data_1_V_read),
    .data_2_V_read(data_2_V_read),
    .data_3_V_read(data_3_V_read),
    .data_4_V_read(data_4_V_read),
    .data_5_V_read(data_5_V_read),
    .data_6_V_read(data_6_V_read),
    .data_7_V_read(data_7_V_read),
    .data_8_V_read(data_8_V_read),
    .data_9_V_read(data_9_V_read),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_2),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_ce)
);

sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start),
    .ap_done(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_done),
    .ap_idle(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_idle),
    .ap_ready(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ready),
    .ap_ce(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ce),
    .data_0_V_read(inputacc_zr_0_V_reg_365),
    .data_1_V_read(inputacc_zr_1_V_reg_370),
    .ap_return_0(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_0),
    .ap_return_1(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_1)
);

dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_V_read(grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_data_V_read),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_2),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_ce)
);

tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start),
    .ap_done(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_done),
    .ap_idle(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_idle),
    .ap_ready(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ready),
    .ap_ce(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ce),
    .data_V_read(inputacc_h_0_V_reg_411),
    .ap_return(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_return)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_1_V_reg_381),
    .din1(tmpres_state_zr_2_V_reg_360),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p2)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_0_V_reg_375),
    .din1(select_ln443_reg_341),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

myproject_mac_muladd_11s_17s_26s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
myproject_mac_muladd_11s_17s_26s_26_3_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_return),
    .din1(sub_ln1193_fu_242_p2),
    .din2(mul_ln1192_reg_416),
    .ce(grp_fu_283_ce),
    .dout(grp_fu_283_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg <= 1'b1;
        end else if ((grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ready == 1'b1)) begin
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg <= 1'b1;
        end else if ((grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ready == 1'b1)) begin
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_reset_state <= reset_state;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        call_ret1_reg_347_0 <= grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_0;
        call_ret1_reg_347_1 <= grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_1;
        call_ret1_reg_347_2 <= grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_return_2;
        call_ret_reg_354_0 <= grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_0;
        call_ret_reg_354_1 <= grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_1;
        tmpres_state_zr_2_V_reg_360 <= grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        h_state_V_0 <= {{grp_fu_283_p3[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        inputacc_h_0_V_reg_411 <= inputacc_h_0_V_fu_233_p2;
        mul_ln1192_reg_416 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        inputacc_zr_0_V_reg_365 <= inputacc_zr_0_V_fu_189_p2;
        inputacc_zr_1_V_reg_370 <= inputacc_zr_1_V_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_ln1118_reg_406 <= grp_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln443_reg_341 <= select_ln443_fu_164_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        tmpres_zr_0_V_reg_375 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_0;
        tmpres_zr_1_V_reg_381 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_return_1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b1))) begin
        ap_reset_start_pp0 = 1'b1;
    end else begin
        ap_reset_start_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_sig_allocacmp_h_state_V_0_load = {{grp_fu_283_p3[25:10]}};
    end else begin
        ap_sig_allocacmp_h_state_V_0_load = h_state_V_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp32) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp35) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp33) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp34) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp41) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp39) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
        grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_config2_1_0_0_0_0_fu_116_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp42) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp40) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
        grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))))) begin
        grp_fu_283_ce = 1'b1;
    end else begin
        grp_fu_283_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp52) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp51) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp50) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp53) & (1'b1 == ap_CS_fsm_pp0_stage10))))) begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ce = 1'b1;
    end else begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp69) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp70) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp71) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp72) & (1'b1 == ap_CS_fsm_pp0_stage2))))) begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ce = 1'b1;
    end else begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_start_pp0 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if ((((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_start_pp0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp32 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp70 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp53 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001_ignoreCallOp69 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage1_11001_ignoreCallOp33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp71 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp72 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp40 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp41 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp42 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp50 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage8_11001_ignoreCallOp51 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_ignoreCallOp52 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1_ignore_call31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call13 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call31 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1_ignore_call17 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call17 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call17 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = {{grp_fu_283_p3[25:10]}};

assign grp_dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0_fu_148_data_V_read = ((select_ln443_fu_164_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_0_load);

assign grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start = grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_140_ap_start_reg;

assign grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start = grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_153_ap_start_reg;

assign inputacc_h_0_V_fu_233_p2 = (trunc_ln_fu_224_p4 + call_ret1_reg_347_2);

assign inputacc_zr_0_V_fu_189_p2 = (call_ret_reg_354_0 + call_ret1_reg_347_0);

assign inputacc_zr_1_V_fu_195_p2 = (call_ret_reg_354_1 + call_ret1_reg_347_1);

assign select_ln443_fu_164_p0 = ap_port_reg_reset_state;

assign select_ln443_fu_164_p3 = ((select_ln443_fu_164_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_0_load);

assign sext_ln1193_fu_239_p1 = tmpres_zr_0_V_reg_375;

assign sub_ln1193_fu_242_p2 = ($signed(17'd1024) - $signed(sext_ln1193_fu_239_p1));

assign trunc_ln_fu_224_p4 = {{mul_ln1118_reg_406[25:10]}};

endmodule //gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s
