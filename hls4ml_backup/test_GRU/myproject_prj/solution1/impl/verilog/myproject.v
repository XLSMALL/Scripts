// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.297750,HLS_SYN_LAT=104,HLS_SYN_TPT=105,HLS_SYN_MEM=2,HLS_SYN_DSP=33,HLS_SYN_FF=5101,HLS_SYN_LUT=2253,HLS_VERSION=2019_2}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_1_V,
        input_1_V_ap_vld,
        layer3_out_0_V,
        layer3_out_0_V_ap_vld,
        layer3_out_1_V,
        layer3_out_1_V_ap_vld,
        layer3_out_2_V,
        layer3_out_2_V_ap_vld,
        layer3_out_3_V,
        layer3_out_3_V_ap_vld,
        layer3_out_4_V,
        layer3_out_4_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 105'd1;
parameter    ap_ST_fsm_state2 = 105'd2;
parameter    ap_ST_fsm_state3 = 105'd4;
parameter    ap_ST_fsm_state4 = 105'd8;
parameter    ap_ST_fsm_state5 = 105'd16;
parameter    ap_ST_fsm_state6 = 105'd32;
parameter    ap_ST_fsm_state7 = 105'd64;
parameter    ap_ST_fsm_state8 = 105'd128;
parameter    ap_ST_fsm_state9 = 105'd256;
parameter    ap_ST_fsm_state10 = 105'd512;
parameter    ap_ST_fsm_state11 = 105'd1024;
parameter    ap_ST_fsm_state12 = 105'd2048;
parameter    ap_ST_fsm_state13 = 105'd4096;
parameter    ap_ST_fsm_state14 = 105'd8192;
parameter    ap_ST_fsm_state15 = 105'd16384;
parameter    ap_ST_fsm_state16 = 105'd32768;
parameter    ap_ST_fsm_state17 = 105'd65536;
parameter    ap_ST_fsm_state18 = 105'd131072;
parameter    ap_ST_fsm_state19 = 105'd262144;
parameter    ap_ST_fsm_state20 = 105'd524288;
parameter    ap_ST_fsm_state21 = 105'd1048576;
parameter    ap_ST_fsm_state22 = 105'd2097152;
parameter    ap_ST_fsm_state23 = 105'd4194304;
parameter    ap_ST_fsm_state24 = 105'd8388608;
parameter    ap_ST_fsm_state25 = 105'd16777216;
parameter    ap_ST_fsm_state26 = 105'd33554432;
parameter    ap_ST_fsm_state27 = 105'd67108864;
parameter    ap_ST_fsm_state28 = 105'd134217728;
parameter    ap_ST_fsm_state29 = 105'd268435456;
parameter    ap_ST_fsm_state30 = 105'd536870912;
parameter    ap_ST_fsm_state31 = 105'd1073741824;
parameter    ap_ST_fsm_state32 = 105'd2147483648;
parameter    ap_ST_fsm_state33 = 105'd4294967296;
parameter    ap_ST_fsm_state34 = 105'd8589934592;
parameter    ap_ST_fsm_state35 = 105'd17179869184;
parameter    ap_ST_fsm_state36 = 105'd34359738368;
parameter    ap_ST_fsm_state37 = 105'd68719476736;
parameter    ap_ST_fsm_state38 = 105'd137438953472;
parameter    ap_ST_fsm_state39 = 105'd274877906944;
parameter    ap_ST_fsm_state40 = 105'd549755813888;
parameter    ap_ST_fsm_state41 = 105'd1099511627776;
parameter    ap_ST_fsm_state42 = 105'd2199023255552;
parameter    ap_ST_fsm_state43 = 105'd4398046511104;
parameter    ap_ST_fsm_state44 = 105'd8796093022208;
parameter    ap_ST_fsm_state45 = 105'd17592186044416;
parameter    ap_ST_fsm_state46 = 105'd35184372088832;
parameter    ap_ST_fsm_state47 = 105'd70368744177664;
parameter    ap_ST_fsm_state48 = 105'd140737488355328;
parameter    ap_ST_fsm_state49 = 105'd281474976710656;
parameter    ap_ST_fsm_state50 = 105'd562949953421312;
parameter    ap_ST_fsm_state51 = 105'd1125899906842624;
parameter    ap_ST_fsm_state52 = 105'd2251799813685248;
parameter    ap_ST_fsm_state53 = 105'd4503599627370496;
parameter    ap_ST_fsm_state54 = 105'd9007199254740992;
parameter    ap_ST_fsm_state55 = 105'd18014398509481984;
parameter    ap_ST_fsm_state56 = 105'd36028797018963968;
parameter    ap_ST_fsm_state57 = 105'd72057594037927936;
parameter    ap_ST_fsm_state58 = 105'd144115188075855872;
parameter    ap_ST_fsm_state59 = 105'd288230376151711744;
parameter    ap_ST_fsm_state60 = 105'd576460752303423488;
parameter    ap_ST_fsm_state61 = 105'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 105'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 105'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 105'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 105'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 105'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 105'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 105'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 105'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 105'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 105'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 105'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 105'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 105'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 105'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 105'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 105'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 105'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 105'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 105'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 105'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 105'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 105'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 105'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 105'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 105'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 105'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 105'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 105'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 105'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 105'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 105'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 105'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 105'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 105'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 105'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 105'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 105'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 105'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 105'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 105'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 105'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 105'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 105'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 105'd20282409603651670423947251286016;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [799:0] input_1_V;
input   input_1_V_ap_vld;
output  [15:0] layer3_out_0_V;
output   layer3_out_0_V_ap_vld;
input  [15:0] layer3_out_1_V;
input   layer3_out_1_V_ap_vld;
input  [15:0] layer3_out_2_V;
input   layer3_out_2_V_ap_vld;
input  [15:0] layer3_out_3_V;
input   layer3_out_3_V_ap_vld;
input  [15:0] layer3_out_4_V;
input   layer3_out_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer3_out_0_V_ap_vld;

(* fsm_encoding = "none" *) reg   [104:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [799:0] input_1_V_preg;
reg   [799:0] input_1_V_in_sig;
reg    input_1_V_ap_vld_preg;
reg    input_1_V_ap_vld_in_sig;
reg    input_1_V_blk_n;
reg   [15:0] data_in_0_V_1_reg_794;
reg    ap_block_state1;
reg   [15:0] data_in_1_V_1_reg_799;
reg   [15:0] data_in_2_V_1_reg_804;
reg   [15:0] data_in_3_V_1_reg_809;
reg   [15:0] data_in_4_V_1_reg_814;
reg   [15:0] data_in_5_V_1_reg_819;
reg   [15:0] data_in_6_V_1_reg_824;
reg   [15:0] data_in_7_V_1_reg_829;
reg   [15:0] data_in_8_V_1_reg_834;
reg   [15:0] data_in_9_V_1_reg_839;
reg   [15:0] data_in_0_V_2_reg_844;
reg   [15:0] data_in_1_V_2_reg_849;
reg   [15:0] data_in_2_V_2_reg_854;
reg   [15:0] data_in_3_V_2_reg_859;
reg   [15:0] data_in_4_V_2_reg_864;
reg   [15:0] data_in_5_V_2_reg_869;
reg   [15:0] data_in_6_V_2_reg_874;
reg   [15:0] data_in_7_V_2_reg_879;
reg   [15:0] data_in_8_V_2_reg_884;
reg   [15:0] data_in_9_V_2_reg_889;
reg   [15:0] data_in_0_V_3_reg_894;
reg   [15:0] data_in_1_V_3_reg_899;
reg   [15:0] data_in_2_V_3_reg_904;
reg   [15:0] data_in_3_V_3_reg_909;
reg   [15:0] data_in_4_V_3_reg_914;
reg   [15:0] data_in_5_V_3_reg_919;
reg   [15:0] data_in_6_V_3_reg_924;
reg   [15:0] data_in_7_V_3_reg_929;
reg   [15:0] data_in_8_V_3_reg_934;
reg   [15:0] data_in_9_V_3_reg_939;
reg   [15:0] data_in_0_V_4_reg_944;
reg   [15:0] data_in_1_V_4_reg_949;
reg   [15:0] data_in_2_V_4_reg_954;
reg   [15:0] data_in_3_V_4_reg_959;
reg   [15:0] data_in_4_V_4_reg_964;
reg   [15:0] data_in_5_V_4_reg_969;
reg   [15:0] data_in_6_V_4_reg_974;
reg   [15:0] data_in_7_V_4_reg_979;
reg   [15:0] data_in_8_V_4_reg_984;
reg   [15:0] data_in_9_V_4_reg_989;
wire   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_return;
reg   [15:0] h_state_0_V_reg_994;
wire    ap_CS_fsm_state21;
reg    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start;
wire    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_done;
wire    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_idle;
wire    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ready;
reg    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ce;
reg    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_reset_state;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read;
reg   [15:0] grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read;
reg    ap_block_state1_ignore_call21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_return;
reg    grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_ce;
reg    grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg;
reg   [104:0] ap_NS_fsm;
wire    ap_NS_fsm_state22;
wire    ap_NS_fsm_state43;
wire    ap_NS_fsm_state64;
wire    ap_NS_fsm_state85;
wire   [15:0] data_in_0_V_fu_290_p1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 105'd1;
#0 input_1_V_preg = 800'd0;
#0 input_1_V_ap_vld_preg = 1'b0;
#0 grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg = 1'b0;
end

gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start),
    .ap_done(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_done),
    .ap_idle(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_idle),
    .ap_ready(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ready),
    .ap_ce(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ce),
    .reset_state(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_reset_state),
    .data_0_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read),
    .data_1_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read),
    .data_2_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read),
    .data_3_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read),
    .data_4_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read),
    .data_5_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read),
    .data_6_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read),
    .data_7_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read),
    .data_8_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read),
    .data_9_V_read(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read),
    .ap_return(grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_return)
);

dense_latency_ap_fixed_ap_fixed_config3_0_0 grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_V_read(h_state_0_V_reg_994),
    .ap_return(grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_return),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state85) & (1'b1 == ap_CS_fsm_state84)) | ((1'b1 == ap_NS_fsm_state64) & (1'b1 == ap_CS_fsm_state63)) | ((1'b1 == ap_NS_fsm_state43) & (1'b1 == ap_CS_fsm_state42)) | ((1'b1 == ap_NS_fsm_state22) & (1'b1 == ap_CS_fsm_state21)))) begin
            grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg <= 1'b1;
        end else if ((grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ready == 1'b1)) begin
            grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_1_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state105)) begin
            input_1_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input_1_V_ap_vld == 1'b1))) begin
            input_1_V_ap_vld_preg <= input_1_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_1_V_preg <= 800'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (input_1_V_ap_vld == 1'b1))) begin
            input_1_V_preg <= input_1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_in_0_V_1_reg_794 <= {{input_1_V_in_sig[175:160]}};
        data_in_0_V_2_reg_844 <= {{input_1_V_in_sig[335:320]}};
        data_in_0_V_3_reg_894 <= {{input_1_V_in_sig[495:480]}};
        data_in_0_V_4_reg_944 <= {{input_1_V_in_sig[655:640]}};
        data_in_1_V_1_reg_799 <= {{input_1_V_in_sig[191:176]}};
        data_in_1_V_2_reg_849 <= {{input_1_V_in_sig[351:336]}};
        data_in_1_V_3_reg_899 <= {{input_1_V_in_sig[511:496]}};
        data_in_1_V_4_reg_949 <= {{input_1_V_in_sig[671:656]}};
        data_in_2_V_1_reg_804 <= {{input_1_V_in_sig[207:192]}};
        data_in_2_V_2_reg_854 <= {{input_1_V_in_sig[367:352]}};
        data_in_2_V_3_reg_904 <= {{input_1_V_in_sig[527:512]}};
        data_in_2_V_4_reg_954 <= {{input_1_V_in_sig[687:672]}};
        data_in_3_V_1_reg_809 <= {{input_1_V_in_sig[223:208]}};
        data_in_3_V_2_reg_859 <= {{input_1_V_in_sig[383:368]}};
        data_in_3_V_3_reg_909 <= {{input_1_V_in_sig[543:528]}};
        data_in_3_V_4_reg_959 <= {{input_1_V_in_sig[703:688]}};
        data_in_4_V_1_reg_814 <= {{input_1_V_in_sig[239:224]}};
        data_in_4_V_2_reg_864 <= {{input_1_V_in_sig[399:384]}};
        data_in_4_V_3_reg_914 <= {{input_1_V_in_sig[559:544]}};
        data_in_4_V_4_reg_964 <= {{input_1_V_in_sig[719:704]}};
        data_in_5_V_1_reg_819 <= {{input_1_V_in_sig[255:240]}};
        data_in_5_V_2_reg_869 <= {{input_1_V_in_sig[415:400]}};
        data_in_5_V_3_reg_919 <= {{input_1_V_in_sig[575:560]}};
        data_in_5_V_4_reg_969 <= {{input_1_V_in_sig[735:720]}};
        data_in_6_V_1_reg_824 <= {{input_1_V_in_sig[271:256]}};
        data_in_6_V_2_reg_874 <= {{input_1_V_in_sig[431:416]}};
        data_in_6_V_3_reg_924 <= {{input_1_V_in_sig[591:576]}};
        data_in_6_V_4_reg_974 <= {{input_1_V_in_sig[751:736]}};
        data_in_7_V_1_reg_829 <= {{input_1_V_in_sig[287:272]}};
        data_in_7_V_2_reg_879 <= {{input_1_V_in_sig[447:432]}};
        data_in_7_V_3_reg_929 <= {{input_1_V_in_sig[607:592]}};
        data_in_7_V_4_reg_979 <= {{input_1_V_in_sig[767:752]}};
        data_in_8_V_1_reg_834 <= {{input_1_V_in_sig[303:288]}};
        data_in_8_V_2_reg_884 <= {{input_1_V_in_sig[463:448]}};
        data_in_8_V_3_reg_934 <= {{input_1_V_in_sig[623:608]}};
        data_in_8_V_4_reg_984 <= {{input_1_V_in_sig[783:768]}};
        data_in_9_V_1_reg_839 <= {{input_1_V_in_sig[319:304]}};
        data_in_9_V_2_reg_889 <= {{input_1_V_in_sig[479:464]}};
        data_in_9_V_3_reg_939 <= {{input_1_V_in_sig[639:624]}};
        data_in_9_V_4_reg_989 <= {{input_1_V_in_sig[799:784]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        h_state_0_V_reg_994 <= grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_return;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0)))) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ce = 1'b0;
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((~((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start = 1'b1;
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start = grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_ap_start_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = data_in_0_V_4_reg_944;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = data_in_0_V_3_reg_894;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = data_in_0_V_2_reg_844;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = data_in_0_V_1_reg_794;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = data_in_0_V_fu_290_p1;
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_0_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = data_in_1_V_4_reg_949;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = data_in_1_V_3_reg_899;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = data_in_1_V_2_reg_849;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = data_in_1_V_1_reg_799;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = {{input_1_V_in_sig[31:16]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_1_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = data_in_2_V_4_reg_954;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = data_in_2_V_3_reg_904;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = data_in_2_V_2_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = data_in_2_V_1_reg_804;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = {{input_1_V_in_sig[47:32]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_2_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = data_in_3_V_4_reg_959;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = data_in_3_V_3_reg_909;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = data_in_3_V_2_reg_859;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = data_in_3_V_1_reg_809;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = {{input_1_V_in_sig[63:48]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_3_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = data_in_4_V_4_reg_964;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = data_in_4_V_3_reg_914;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = data_in_4_V_2_reg_864;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = data_in_4_V_1_reg_814;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = {{input_1_V_in_sig[79:64]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_4_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = data_in_5_V_4_reg_969;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = data_in_5_V_3_reg_919;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = data_in_5_V_2_reg_869;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = data_in_5_V_1_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = {{input_1_V_in_sig[95:80]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_5_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = data_in_6_V_4_reg_974;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = data_in_6_V_3_reg_924;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = data_in_6_V_2_reg_874;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = data_in_6_V_1_reg_824;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = {{input_1_V_in_sig[111:96]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_6_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = data_in_7_V_4_reg_979;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = data_in_7_V_3_reg_929;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = data_in_7_V_2_reg_879;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = data_in_7_V_1_reg_829;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = {{input_1_V_in_sig[127:112]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_7_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = data_in_8_V_4_reg_984;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = data_in_8_V_3_reg_934;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = data_in_8_V_2_reg_884;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = data_in_8_V_1_reg_834;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = {{input_1_V_in_sig[143:128]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_8_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = data_in_9_V_4_reg_989;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = data_in_9_V_3_reg_939;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = data_in_9_V_2_reg_889;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = data_in_9_V_1_reg_839;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = {{input_1_V_in_sig[159:144]}};
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_data_9_V_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_reset_state = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_reset_state = 1'd1;
    end else begin
        grp_gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s_fu_261_reset_state = 'bx;
    end
end

always @ (*) begin
    if ((input_1_V_ap_vld == 1'b1)) begin
        input_1_V_ap_vld_in_sig = input_1_V_ap_vld;
    end else begin
        input_1_V_ap_vld_in_sig = input_1_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        input_1_V_blk_n = input_1_V_ap_vld;
    end else begin
        input_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((input_1_V_ap_vld == 1'b1)) begin
        input_1_V_in_sig = input_1_V;
    end else begin
        input_1_V_in_sig = input_1_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        layer3_out_0_V_ap_vld = 1'b1;
    end else begin
        layer3_out_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_NS_fsm_state22 = ap_NS_fsm[32'd21];

assign ap_NS_fsm_state43 = ap_NS_fsm[32'd42];

assign ap_NS_fsm_state64 = ap_NS_fsm[32'd63];

assign ap_NS_fsm_state85 = ap_NS_fsm[32'd84];

always @ (*) begin
    ap_block_state1 = ((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call21 = ((input_1_V_ap_vld_in_sig == 1'b0) | (ap_start == 1'b0));
end

assign data_in_0_V_fu_290_p1 = input_1_V_in_sig[15:0];

assign layer3_out_0_V = grp_dense_latency_ap_fixed_ap_fixed_config3_0_0_fu_284_ap_return;

endmodule //myproject
