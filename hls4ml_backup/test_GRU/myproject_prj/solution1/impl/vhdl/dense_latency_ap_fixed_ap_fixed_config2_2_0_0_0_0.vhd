-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_ap_fixed_ap_fixed_config2_2_0_0_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv26_3DF : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001111011111";
    constant ap_const_lv25_DF : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011011111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln708_2_reg_193 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_54_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_56_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_2_fu_101_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_110_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_110_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_2_fu_101_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_4_fu_118_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1118_fu_122_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_56_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln_fu_138_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_54_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln708_fu_148_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_fu_152_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_54_ce : STD_LOGIC;
    signal grp_fu_56_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component myproject_mul_16s_11ns_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_9ns_25_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    myproject_mul_16s_11ns_26_2_0_U48 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_V_read,
        din1 => grp_fu_54_p1,
        ce => grp_fu_54_ce,
        dout => grp_fu_54_p2);

    myproject_mul_16s_9ns_25_2_0_U49 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_V_read,
        din1 => grp_fu_56_p1,
        ce => grp_fu_56_ce,
        dout => grp_fu_56_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= sext_ln708_fu_148_p1;
                ap_return_1_int_reg <= acc_1_V_fu_152_p1;
                ap_return_2_int_reg <= grp_fu_54_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                trunc_ln708_2_reg_193 <= sub_ln1118_fu_122_p2(23 downto 10);
            end if;
        end if;
    end process;
        acc_1_V_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_reg_193),16));

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(sext_ln708_fu_148_p1, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= sext_ln708_fu_148_p1;
        end if; 
    end process;


    ap_return_1_assign_proc : process(acc_1_V_fu_152_p1, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= acc_1_V_fu_152_p1;
        end if; 
    end process;


    ap_return_2_assign_proc : process(grp_fu_54_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= grp_fu_54_p2(25 downto 10);
        end if; 
    end process;


    grp_fu_54_ce_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_54_ce <= ap_const_logic_1;
        else 
            grp_fu_54_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_54_p1 <= ap_const_lv26_3DF(11 - 1 downto 0);

    grp_fu_56_ce_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_56_ce <= ap_const_logic_1;
        else 
            grp_fu_56_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_56_p1 <= ap_const_lv25_DF(9 - 1 downto 0);
    sext_ln1118_2_fu_101_p0 <= data_V_read;
        sext_ln1118_2_fu_101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_2_fu_101_p0),24));

        sext_ln1118_4_fu_118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_110_p3),24));

        sext_ln708_fu_148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_138_p4),16));

    sub_ln1118_fu_122_p2 <= std_logic_vector(signed(sext_ln1118_2_fu_101_p1) - signed(sext_ln1118_4_fu_118_p1));
    tmp_fu_110_p1 <= data_V_read;
    tmp_fu_110_p3 <= (tmp_fu_110_p1 & ap_const_lv7_0);
    trunc_ln_fu_138_p4 <= grp_fu_56_p2(24 downto 10);
end behav;
