-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv_1d_latency_cl_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of pointwise_conv_1d_latency_cl_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv25_EB : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011101011";
    constant ap_const_lv26_20A : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000001010";
    constant ap_const_lv26_233 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000110011";
    constant ap_const_lv26_3FFFDDA : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110111011010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal data_17_V_read_1_reg_2069 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_13_V_read_1_reg_2074 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_9_V_read_1_reg_2079 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_2_reg_2084 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_V_read_3_reg_2089 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_reg_2169 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_reg_2169_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_2_reg_2179 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_3_reg_2184 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_4_reg_2189 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_4_reg_2189_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_6_reg_2199 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_7_reg_2204 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_8_reg_2209 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_8_reg_2209_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_s_reg_2219 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_10_reg_2224 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_11_reg_2229 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_11_reg_2229_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_13_reg_2239 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_14_reg_2244 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_15_reg_2249 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_15_reg_2249_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_17_reg_2259 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_18_reg_2264 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_2269 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_reg_2274 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_9_reg_2279 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_12_reg_2284 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_16_reg_2289 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1_fu_1954_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1_reg_2294 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_4_fu_1958_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_4_reg_2299 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_7_fu_1962_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_7_reg_2304 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_10_fu_1966_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_10_reg_2309 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_13_fu_1970_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_13_reg_2314 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_198_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_199_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_201_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_202_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_203_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_204_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_205_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_206_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_209_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_212_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_213_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_217_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_198_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_217_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_216_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_212_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_205_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_203_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_204_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln708_fu_1974_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_fu_1989_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_1_fu_1977_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_3_fu_1999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_2_fu_1980_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_6_fu_2009_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_3_fu_1983_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_9_fu_2019_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_4_fu_1986_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_12_fu_2029_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_2_fu_1994_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_5_fu_2004_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_8_fu_2014_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_11_fu_2024_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_14_fu_2034_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_198_ce : STD_LOGIC;
    signal grp_fu_199_ce : STD_LOGIC;
    signal grp_fu_200_ce : STD_LOGIC;
    signal grp_fu_201_ce : STD_LOGIC;
    signal grp_fu_202_ce : STD_LOGIC;
    signal grp_fu_203_ce : STD_LOGIC;
    signal grp_fu_204_ce : STD_LOGIC;
    signal grp_fu_205_ce : STD_LOGIC;
    signal grp_fu_206_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_208_ce : STD_LOGIC;
    signal grp_fu_209_ce : STD_LOGIC;
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_212_ce : STD_LOGIC;
    signal grp_fu_213_ce : STD_LOGIC;
    signal grp_fu_214_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_216_ce : STD_LOGIC;
    signal grp_fu_217_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_16_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_17_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_18_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_19_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_4_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component myproject_mul_16s_9ns_25_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_16s_11ns_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_11s_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    myproject_mul_16s_9ns_25_2_0_U210 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_0_V_read_int_reg,
        din1 => grp_fu_198_p1,
        ce => grp_fu_198_ce,
        dout => grp_fu_198_p2);

    myproject_mul_16s_11ns_26_2_0_U211 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_19_V_read_int_reg,
        din1 => grp_fu_199_p1,
        ce => grp_fu_199_ce,
        dout => grp_fu_199_p2);

    myproject_mul_16s_9ns_25_2_0_U212 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_8_V_read_int_reg,
        din1 => grp_fu_200_p1,
        ce => grp_fu_200_ce,
        dout => grp_fu_200_p2);

    myproject_mul_16s_11ns_26_2_0_U213 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_2_V_read_int_reg,
        din1 => grp_fu_201_p1,
        ce => grp_fu_201_ce,
        dout => grp_fu_201_p2);

    myproject_mul_16s_11s_26_2_0_U214 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_17_V_read_1_reg_2069,
        din1 => grp_fu_202_p1,
        ce => grp_fu_202_ce,
        dout => grp_fu_202_p2);

    myproject_mul_16s_11ns_26_2_0_U215 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_15_V_read_int_reg,
        din1 => grp_fu_203_p1,
        ce => grp_fu_203_ce,
        dout => grp_fu_203_p2);

    myproject_mul_16s_11s_26_2_0_U216 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read_3_reg_2089,
        din1 => grp_fu_204_p1,
        ce => grp_fu_204_ce,
        dout => grp_fu_204_p2);

    myproject_mul_16s_11ns_26_2_0_U217 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_7_V_read_int_reg,
        din1 => grp_fu_205_p1,
        ce => grp_fu_205_ce,
        dout => grp_fu_205_p2);

    myproject_mul_16s_11ns_26_2_0_U218 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_11_V_read_int_reg,
        din1 => grp_fu_206_p1,
        ce => grp_fu_206_ce,
        dout => grp_fu_206_p2);

    myproject_mul_16s_11ns_26_2_0_U219 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_10_V_read_int_reg,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    myproject_mul_16s_9ns_25_2_0_U220 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_12_V_read_int_reg,
        din1 => grp_fu_208_p1,
        ce => grp_fu_208_ce,
        dout => grp_fu_208_p2);

    myproject_mul_16s_11s_26_2_0_U221 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_13_V_read_1_reg_2074,
        din1 => grp_fu_209_p1,
        ce => grp_fu_209_ce,
        dout => grp_fu_209_p2);

    myproject_mul_16s_11s_26_2_0_U222 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_9_V_read_1_reg_2079,
        din1 => grp_fu_210_p1,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    myproject_mul_16s_9ns_25_2_0_U223 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_16_V_read_int_reg,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    myproject_mul_16s_11ns_26_2_0_U224 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_6_V_read_int_reg,
        din1 => grp_fu_212_p1,
        ce => grp_fu_212_ce,
        dout => grp_fu_212_p2);

    myproject_mul_16s_11ns_26_2_0_U225 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_14_V_read_int_reg,
        din1 => grp_fu_213_p1,
        ce => grp_fu_213_ce,
        dout => grp_fu_213_p2);

    myproject_mul_16s_11ns_26_2_0_U226 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_18_V_read_int_reg,
        din1 => grp_fu_214_p1,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p2);

    myproject_mul_16s_11s_26_2_0_U227 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_5_V_read_2_reg_2084,
        din1 => grp_fu_215_p1,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    myproject_mul_16s_9ns_25_2_0_U228 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_4_V_read_int_reg,
        din1 => grp_fu_216_p1,
        ce => grp_fu_216_ce,
        dout => grp_fu_216_p2);

    myproject_mul_16s_11ns_26_2_0_U229 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_3_V_read_int_reg,
        din1 => grp_fu_217_p1,
        ce => grp_fu_217_ce,
        dout => grp_fu_217_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_10_reg_2309 <= add_ln703_10_fu_1966_p2;
                add_ln703_13_reg_2314 <= add_ln703_13_fu_1970_p2;
                add_ln703_1_reg_2294 <= add_ln703_1_fu_1954_p2;
                add_ln703_4_reg_2299 <= add_ln703_4_fu_1958_p2;
                add_ln703_7_reg_2304 <= add_ln703_7_fu_1962_p2;
                data_13_V_read_1_reg_2074 <= data_13_V_read_int_reg;
                data_17_V_read_1_reg_2069 <= data_17_V_read_int_reg;
                data_1_V_read_3_reg_2089 <= data_1_V_read_int_reg;
                data_5_V_read_2_reg_2084 <= data_5_V_read_int_reg;
                data_9_V_read_1_reg_2079 <= data_9_V_read_int_reg;
                trunc_ln708_10_reg_2224 <= grp_fu_206_p2(25 downto 10);
                trunc_ln708_11_reg_2229 <= grp_fu_208_p2(24 downto 10);
                trunc_ln708_11_reg_2229_pp0_iter2_reg <= trunc_ln708_11_reg_2229;
                trunc_ln708_12_reg_2284 <= grp_fu_209_p2(25 downto 10);
                trunc_ln708_13_reg_2239 <= grp_fu_213_p2(25 downto 10);
                trunc_ln708_14_reg_2244 <= grp_fu_203_p2(25 downto 10);
                trunc_ln708_15_reg_2249 <= grp_fu_211_p2(24 downto 10);
                trunc_ln708_15_reg_2249_pp0_iter2_reg <= trunc_ln708_15_reg_2249;
                trunc_ln708_16_reg_2289 <= grp_fu_202_p2(25 downto 10);
                trunc_ln708_17_reg_2259 <= grp_fu_214_p2(25 downto 10);
                trunc_ln708_18_reg_2264 <= grp_fu_199_p2(25 downto 10);
                trunc_ln708_1_reg_2269 <= grp_fu_204_p2(25 downto 10);
                trunc_ln708_2_reg_2179 <= grp_fu_201_p2(25 downto 10);
                trunc_ln708_3_reg_2184 <= grp_fu_217_p2(25 downto 10);
                trunc_ln708_4_reg_2189 <= grp_fu_216_p2(24 downto 10);
                trunc_ln708_4_reg_2189_pp0_iter2_reg <= trunc_ln708_4_reg_2189;
                trunc_ln708_5_reg_2274 <= grp_fu_215_p2(25 downto 10);
                trunc_ln708_6_reg_2199 <= grp_fu_212_p2(25 downto 10);
                trunc_ln708_7_reg_2204 <= grp_fu_205_p2(25 downto 10);
                trunc_ln708_8_reg_2209 <= grp_fu_200_p2(24 downto 10);
                trunc_ln708_8_reg_2209_pp0_iter2_reg <= trunc_ln708_8_reg_2209;
                trunc_ln708_9_reg_2279 <= grp_fu_210_p2(25 downto 10);
                trunc_ln708_s_reg_2219 <= grp_fu_207_p2(25 downto 10);
                trunc_ln_reg_2169 <= grp_fu_198_p2(24 downto 10);
                trunc_ln_reg_2169_pp0_iter2_reg <= trunc_ln_reg_2169;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= add_ln703_2_fu_1994_p2;
                ap_return_1_int_reg <= add_ln703_5_fu_2004_p2;
                ap_return_2_int_reg <= add_ln703_8_fu_2014_p2;
                ap_return_3_int_reg <= add_ln703_11_fu_2024_p2;
                ap_return_4_int_reg <= add_ln703_14_fu_2034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_16_V_read_int_reg <= data_16_V_read;
                data_17_V_read_int_reg <= data_17_V_read;
                data_18_V_read_int_reg <= data_18_V_read;
                data_19_V_read_int_reg <= data_19_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    add_ln703_10_fu_1966_p2 <= std_logic_vector(unsigned(trunc_ln708_13_reg_2239) + unsigned(trunc_ln708_14_reg_2244));
    add_ln703_11_fu_2024_p2 <= std_logic_vector(unsigned(add_ln703_10_reg_2309) + unsigned(add_ln703_9_fu_2019_p2));
    add_ln703_12_fu_2029_p2 <= std_logic_vector(signed(sext_ln708_4_fu_1986_p1) + signed(trunc_ln708_16_reg_2289));
    add_ln703_13_fu_1970_p2 <= std_logic_vector(unsigned(trunc_ln708_17_reg_2259) + unsigned(trunc_ln708_18_reg_2264));
    add_ln703_14_fu_2034_p2 <= std_logic_vector(unsigned(add_ln703_13_reg_2314) + unsigned(add_ln703_12_fu_2029_p2));
    add_ln703_1_fu_1954_p2 <= std_logic_vector(unsigned(trunc_ln708_2_reg_2179) + unsigned(trunc_ln708_3_reg_2184));
    add_ln703_2_fu_1994_p2 <= std_logic_vector(unsigned(add_ln703_1_reg_2294) + unsigned(add_ln703_fu_1989_p2));
    add_ln703_3_fu_1999_p2 <= std_logic_vector(signed(sext_ln708_1_fu_1977_p1) + signed(trunc_ln708_5_reg_2274));
    add_ln703_4_fu_1958_p2 <= std_logic_vector(unsigned(trunc_ln708_6_reg_2199) + unsigned(trunc_ln708_7_reg_2204));
    add_ln703_5_fu_2004_p2 <= std_logic_vector(unsigned(add_ln703_4_reg_2299) + unsigned(add_ln703_3_fu_1999_p2));
    add_ln703_6_fu_2009_p2 <= std_logic_vector(signed(sext_ln708_2_fu_1980_p1) + signed(trunc_ln708_9_reg_2279));
    add_ln703_7_fu_1962_p2 <= std_logic_vector(unsigned(trunc_ln708_s_reg_2219) + unsigned(trunc_ln708_10_reg_2224));
    add_ln703_8_fu_2014_p2 <= std_logic_vector(unsigned(add_ln703_7_reg_2304) + unsigned(add_ln703_6_fu_2009_p2));
    add_ln703_9_fu_2019_p2 <= std_logic_vector(signed(sext_ln708_3_fu_1983_p1) + signed(trunc_ln708_12_reg_2284));
    add_ln703_fu_1989_p2 <= std_logic_vector(signed(sext_ln708_fu_1974_p1) + signed(trunc_ln708_1_reg_2269));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(add_ln703_2_fu_1994_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= add_ln703_2_fu_1994_p2;
        end if; 
    end process;


    ap_return_1_assign_proc : process(add_ln703_5_fu_2004_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= add_ln703_5_fu_2004_p2;
        end if; 
    end process;


    ap_return_2_assign_proc : process(add_ln703_8_fu_2014_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= add_ln703_8_fu_2014_p2;
        end if; 
    end process;


    ap_return_3_assign_proc : process(add_ln703_11_fu_2024_p2, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= add_ln703_11_fu_2024_p2;
        end if; 
    end process;


    ap_return_4_assign_proc : process(add_ln703_14_fu_2034_p2, ap_ce_reg, ap_return_4_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_4 <= ap_return_4_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_4 <= add_ln703_14_fu_2034_p2;
        end if; 
    end process;


    grp_fu_198_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_198_ce <= ap_const_logic_1;
        else 
            grp_fu_198_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_198_p1 <= ap_const_lv25_EB(9 - 1 downto 0);

    grp_fu_199_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_199_ce <= ap_const_logic_1;
        else 
            grp_fu_199_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_199_p1 <= ap_const_lv26_20A(11 - 1 downto 0);

    grp_fu_200_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_200_ce <= ap_const_logic_1;
        else 
            grp_fu_200_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_200_p1 <= ap_const_lv25_EB(9 - 1 downto 0);

    grp_fu_201_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_201_ce <= ap_const_logic_1;
        else 
            grp_fu_201_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_201_p1 <= ap_const_lv26_233(11 - 1 downto 0);

    grp_fu_202_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_202_ce <= ap_const_logic_1;
        else 
            grp_fu_202_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_202_p1 <= ap_const_lv26_3FFFDDA(11 - 1 downto 0);

    grp_fu_203_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_203_ce <= ap_const_logic_1;
        else 
            grp_fu_203_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_203_p1 <= ap_const_lv26_20A(11 - 1 downto 0);

    grp_fu_204_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_204_ce <= ap_const_logic_1;
        else 
            grp_fu_204_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_204_p1 <= ap_const_lv26_3FFFDDA(11 - 1 downto 0);

    grp_fu_205_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_205_ce <= ap_const_logic_1;
        else 
            grp_fu_205_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_205_p1 <= ap_const_lv26_20A(11 - 1 downto 0);

    grp_fu_206_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_206_ce <= ap_const_logic_1;
        else 
            grp_fu_206_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_206_p1 <= ap_const_lv26_20A(11 - 1 downto 0);

    grp_fu_207_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_207_p1 <= ap_const_lv26_233(11 - 1 downto 0);

    grp_fu_208_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_208_ce <= ap_const_logic_1;
        else 
            grp_fu_208_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_208_p1 <= ap_const_lv25_EB(9 - 1 downto 0);

    grp_fu_209_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_209_ce <= ap_const_logic_1;
        else 
            grp_fu_209_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_209_p1 <= ap_const_lv26_3FFFDDA(11 - 1 downto 0);

    grp_fu_210_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_210_ce <= ap_const_logic_1;
        else 
            grp_fu_210_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_210_p1 <= ap_const_lv26_3FFFDDA(11 - 1 downto 0);

    grp_fu_211_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_211_p1 <= ap_const_lv25_EB(9 - 1 downto 0);

    grp_fu_212_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_212_ce <= ap_const_logic_1;
        else 
            grp_fu_212_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_212_p1 <= ap_const_lv26_233(11 - 1 downto 0);

    grp_fu_213_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_213_ce <= ap_const_logic_1;
        else 
            grp_fu_213_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_213_p1 <= ap_const_lv26_233(11 - 1 downto 0);

    grp_fu_214_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_214_ce <= ap_const_logic_1;
        else 
            grp_fu_214_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_214_p1 <= ap_const_lv26_233(11 - 1 downto 0);

    grp_fu_215_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_215_ce <= ap_const_logic_1;
        else 
            grp_fu_215_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_215_p1 <= ap_const_lv26_3FFFDDA(11 - 1 downto 0);

    grp_fu_216_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_216_ce <= ap_const_logic_1;
        else 
            grp_fu_216_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_216_p1 <= ap_const_lv25_EB(9 - 1 downto 0);

    grp_fu_217_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_217_ce <= ap_const_logic_1;
        else 
            grp_fu_217_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_217_p1 <= ap_const_lv26_20A(11 - 1 downto 0);
        sext_ln708_1_fu_1977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_4_reg_2189_pp0_iter2_reg),16));

        sext_ln708_2_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_8_reg_2209_pp0_iter2_reg),16));

        sext_ln708_3_fu_1983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_reg_2229_pp0_iter2_reg),16));

        sext_ln708_4_fu_1986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_15_reg_2249_pp0_iter2_reg),16));

        sext_ln708_fu_1974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_2169_pp0_iter2_reg),16));

end behav;
