-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv26_3FFFFF9 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111111001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_200 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_const_lv13_200 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tanh_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce0 : STD_LOGIC;
    signal tanh_table1_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce1 : STD_LOGIC;
    signal tanh_table1_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce2 : STD_LOGIC;
    signal tanh_table1_q2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce3 : STD_LOGIC;
    signal tanh_table1_q3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln850_fu_197_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_reg_697 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln442_fu_205_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln442_reg_702 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_1_fu_269_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_1_reg_707 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln442_1_fu_277_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln442_1_reg_712 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_2_fu_341_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_2_reg_717 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln442_2_fu_349_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln442_2_reg_722 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_3_fu_413_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_3_reg_727 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln442_3_fu_421_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln442_3_reg_732 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln445_fu_471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_reg_737 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_1_fu_525_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_1_reg_742 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_2_fu_579_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_2_reg_747 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_3_fu_633_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln445_3_reg_752 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln446_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_1_fu_645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_2_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_3_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_145_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_137_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_fu_165_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_fu_169_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_fu_155_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_183_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_fu_189_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_fu_217_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_1_fu_209_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_1_fu_237_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_1_fu_241_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_1_fu_227_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_1_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_1_fu_255_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_1_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_1_fu_261_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_fu_289_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_2_fu_281_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_2_fu_309_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_2_fu_313_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_2_fu_299_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_2_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_2_fu_327_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_2_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_333_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_361_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_3_fu_353_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_3_fu_381_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_3_fu_385_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_3_fu_371_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_3_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_3_fu_399_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_3_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_405_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln442_fu_425_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1_fu_435_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln442_4_fu_430_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln444_fu_443_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_fu_455_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln445_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln444_fu_451_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln442_1_fu_479_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln442_5_fu_484_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln444_1_fu_497_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_509_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln445_1_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln444_1_fu_505_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln442_2_fu_533_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_fu_543_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln442_6_fu_538_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln444_2_fu_551_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_9_fu_563_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln445_2_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln444_2_fu_559_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln442_3_fu_587_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_fu_597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln442_7_fu_592_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln444_3_fu_605_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_fu_617_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln445_3_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln444_3_fu_613_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_fu_657_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_1_fu_661_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_2_fu_665_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_3_fu_669_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    tanh_table1_U : component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud
    generic map (
        DataWidth => 11,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_table1_address0,
        ce0 => tanh_table1_ce0,
        q0 => tanh_table1_q0,
        address1 => tanh_table1_address1,
        ce1 => tanh_table1_ce1,
        q1 => tanh_table1_q1,
        address2 => tanh_table1_address2,
        ce2 => tanh_table1_ce2,
        q2 => tanh_table1_q2,
        address3 => tanh_table1_address3,
        ce3 => tanh_table1_ce3,
        q3 => tanh_table1_q3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln445_1_reg_742 <= select_ln445_1_fu_525_p3;
                select_ln445_2_reg_747 <= select_ln445_2_fu_579_p3;
                select_ln445_3_reg_752 <= select_ln445_3_fu_633_p3;
                select_ln445_reg_737 <= select_ln445_fu_471_p3;
                select_ln850_1_reg_707 <= select_ln850_1_fu_269_p3;
                select_ln850_2_reg_717 <= select_ln850_2_fu_341_p3;
                select_ln850_3_reg_727 <= select_ln850_3_fu_413_p3;
                select_ln850_reg_697 <= select_ln850_fu_197_p3;
                trunc_ln442_1_reg_712 <= trunc_ln442_1_fu_277_p1;
                trunc_ln442_2_reg_722 <= trunc_ln442_2_fu_349_p1;
                trunc_ln442_3_reg_732 <= trunc_ln442_3_fu_421_p1;
                trunc_ln442_reg_702 <= trunc_ln442_fu_205_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln442_1_fu_479_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_1_reg_707));
    add_ln442_2_fu_533_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_2_reg_717));
    add_ln442_3_fu_587_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_3_reg_727));
    add_ln442_4_fu_430_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln442_reg_702));
    add_ln442_5_fu_484_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln442_1_reg_712));
    add_ln442_6_fu_538_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln442_2_reg_722));
    add_ln442_7_fu_592_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln442_3_reg_732));
    add_ln442_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_reg_697));
    add_ln700_1_fu_255_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_1_fu_227_p1));
    add_ln700_2_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_2_fu_299_p1));
    add_ln700_3_fu_399_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_3_fu_371_p1));
    add_ln700_fu_183_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_fu_155_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= sext_ln703_fu_657_p1;
    ap_return_1 <= sext_ln703_1_fu_661_p1;
    ap_return_2 <= sext_ln703_2_fu_665_p1;
    ap_return_3 <= sext_ln703_3_fu_669_p1;
    icmp_ln445_1_fu_519_p2 <= "0" when (tmp_7_fu_509_p4 = ap_const_lv3_0) else "1";
    icmp_ln445_2_fu_573_p2 <= "0" when (tmp_9_fu_563_p4 = ap_const_lv3_0) else "1";
    icmp_ln445_3_fu_627_p2 <= "0" when (tmp_11_fu_617_p4 = ap_const_lv3_0) else "1";
    icmp_ln445_fu_465_p2 <= "0" when (tmp_3_fu_455_p4 = ap_const_lv3_0) else "1";
    icmp_ln850_1_fu_231_p2 <= "1" when (signed(shl_ln1118_1_fu_209_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_2_fu_303_p2 <= "1" when (signed(shl_ln1118_2_fu_281_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_3_fu_375_p2 <= "1" when (signed(shl_ln1118_3_fu_353_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_fu_159_p2 <= "1" when (signed(shl_ln_fu_137_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln851_1_fu_249_p2 <= "1" when (p_Result_2_1_fu_241_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_321_p2 <= "1" when (p_Result_2_2_fu_313_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_393_p2 <= "1" when (p_Result_2_3_fu_385_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_fu_177_p2 <= "1" when (p_Result_2_fu_169_p3 = ap_const_lv10_0) else "0";
    p_Result_2_1_fu_241_p3 <= (trunc_ln851_1_fu_237_p1 & ap_const_lv7_0);
    p_Result_2_2_fu_313_p3 <= (trunc_ln851_2_fu_309_p1 & ap_const_lv7_0);
    p_Result_2_3_fu_385_p3 <= (trunc_ln851_3_fu_381_p1 & ap_const_lv7_0);
    p_Result_2_fu_169_p3 <= (trunc_ln851_fu_165_p1 & ap_const_lv7_0);
    select_ln444_1_fu_497_p3 <= 
        ap_const_lv13_0 when (tmp_5_fu_489_p3(0) = '1') else 
        add_ln442_5_fu_484_p2;
    select_ln444_2_fu_551_p3 <= 
        ap_const_lv13_0 when (tmp_8_fu_543_p3(0) = '1') else 
        add_ln442_6_fu_538_p2;
    select_ln444_3_fu_605_p3 <= 
        ap_const_lv13_0 when (tmp_10_fu_597_p3(0) = '1') else 
        add_ln442_7_fu_592_p2;
    select_ln444_fu_443_p3 <= 
        ap_const_lv13_0 when (tmp_1_fu_435_p3(0) = '1') else 
        add_ln442_4_fu_430_p2;
    select_ln445_1_fu_525_p3 <= 
        ap_const_lv10_3FF when (icmp_ln445_1_fu_519_p2(0) = '1') else 
        trunc_ln444_1_fu_505_p1;
    select_ln445_2_fu_579_p3 <= 
        ap_const_lv10_3FF when (icmp_ln445_2_fu_573_p2(0) = '1') else 
        trunc_ln444_2_fu_559_p1;
    select_ln445_3_fu_633_p3 <= 
        ap_const_lv10_3FF when (icmp_ln445_3_fu_627_p2(0) = '1') else 
        trunc_ln444_3_fu_613_p1;
    select_ln445_fu_471_p3 <= 
        ap_const_lv10_3FF when (icmp_ln445_fu_465_p2(0) = '1') else 
        trunc_ln444_fu_451_p1;
    select_ln850_1_fu_269_p3 <= 
        select_ln851_1_fu_261_p3 when (icmp_ln850_1_fu_231_p2(0) = '1') else 
        sext_ln850_1_fu_227_p1;
    select_ln850_2_fu_341_p3 <= 
        select_ln851_2_fu_333_p3 when (icmp_ln850_2_fu_303_p2(0) = '1') else 
        sext_ln850_2_fu_299_p1;
    select_ln850_3_fu_413_p3 <= 
        select_ln851_3_fu_405_p3 when (icmp_ln850_3_fu_375_p2(0) = '1') else 
        sext_ln850_3_fu_371_p1;
    select_ln850_fu_197_p3 <= 
        select_ln851_fu_189_p3 when (icmp_ln850_fu_159_p2(0) = '1') else 
        sext_ln850_fu_155_p1;
    select_ln851_1_fu_261_p3 <= 
        sext_ln850_1_fu_227_p1 when (icmp_ln851_1_fu_249_p2(0) = '1') else 
        add_ln700_1_fu_255_p2;
    select_ln851_2_fu_333_p3 <= 
        sext_ln850_2_fu_299_p1 when (icmp_ln851_2_fu_321_p2(0) = '1') else 
        add_ln700_2_fu_327_p2;
    select_ln851_3_fu_405_p3 <= 
        sext_ln850_3_fu_371_p1 when (icmp_ln851_3_fu_393_p2(0) = '1') else 
        add_ln700_3_fu_399_p2;
    select_ln851_fu_189_p3 <= 
        sext_ln850_fu_155_p1 when (icmp_ln851_fu_177_p2(0) = '1') else 
        add_ln700_fu_183_p2;
        sext_ln703_1_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q1),16));

        sext_ln703_2_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q2),16));

        sext_ln703_3_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q3),16));

        sext_ln703_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q0),16));

        sext_ln850_1_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_217_p4),14));

        sext_ln850_2_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_289_p4),14));

        sext_ln850_3_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_361_p4),14));

        sext_ln850_fu_155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_145_p4),14));

    shl_ln1118_1_fu_209_p3 <= (data_1_V_read & ap_const_lv10_0);
    shl_ln1118_2_fu_281_p3 <= (data_2_V_read & ap_const_lv10_0);
    shl_ln1118_3_fu_353_p3 <= (data_3_V_read & ap_const_lv10_0);
    shl_ln_fu_137_p3 <= (data_0_V_read & ap_const_lv10_0);
    tanh_table1_address0 <= zext_ln446_fu_641_p1(10 - 1 downto 0);
    tanh_table1_address1 <= zext_ln446_1_fu_645_p1(10 - 1 downto 0);
    tanh_table1_address2 <= zext_ln446_2_fu_649_p1(10 - 1 downto 0);
    tanh_table1_address3 <= zext_ln446_3_fu_653_p1(10 - 1 downto 0);

    tanh_table1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            tanh_table1_ce0 <= ap_const_logic_1;
        else 
            tanh_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            tanh_table1_ce1 <= ap_const_logic_1;
        else 
            tanh_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            tanh_table1_ce2 <= ap_const_logic_1;
        else 
            tanh_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce3_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            tanh_table1_ce3 <= ap_const_logic_1;
        else 
            tanh_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_597_p3 <= add_ln442_3_fu_587_p2(13 downto 13);
    tmp_11_fu_617_p4 <= select_ln444_3_fu_605_p3(12 downto 10);
    tmp_1_fu_435_p3 <= add_ln442_fu_425_p2(13 downto 13);
    tmp_2_fu_217_p4 <= data_1_V_read(15 downto 3);
    tmp_3_fu_455_p4 <= select_ln444_fu_443_p3(12 downto 10);
    tmp_4_fu_289_p4 <= data_2_V_read(15 downto 3);
    tmp_5_fu_489_p3 <= add_ln442_1_fu_479_p2(13 downto 13);
    tmp_6_fu_361_p4 <= data_3_V_read(15 downto 3);
    tmp_7_fu_509_p4 <= select_ln444_1_fu_497_p3(12 downto 10);
    tmp_8_fu_543_p3 <= add_ln442_2_fu_533_p2(13 downto 13);
    tmp_9_fu_563_p4 <= select_ln444_2_fu_551_p3(12 downto 10);
    tmp_fu_145_p4 <= data_0_V_read(15 downto 3);
    trunc_ln442_1_fu_277_p1 <= select_ln850_1_fu_269_p3(13 - 1 downto 0);
    trunc_ln442_2_fu_349_p1 <= select_ln850_2_fu_341_p3(13 - 1 downto 0);
    trunc_ln442_3_fu_421_p1 <= select_ln850_3_fu_413_p3(13 - 1 downto 0);
    trunc_ln442_fu_205_p1 <= select_ln850_fu_197_p3(13 - 1 downto 0);
    trunc_ln444_1_fu_505_p1 <= select_ln444_1_fu_497_p3(10 - 1 downto 0);
    trunc_ln444_2_fu_559_p1 <= select_ln444_2_fu_551_p3(10 - 1 downto 0);
    trunc_ln444_3_fu_613_p1 <= select_ln444_3_fu_605_p3(10 - 1 downto 0);
    trunc_ln444_fu_451_p1 <= select_ln444_fu_443_p3(10 - 1 downto 0);
    trunc_ln851_1_fu_237_p1 <= data_1_V_read(3 - 1 downto 0);
    trunc_ln851_2_fu_309_p1 <= data_2_V_read(3 - 1 downto 0);
    trunc_ln851_3_fu_381_p1 <= data_3_V_read(3 - 1 downto 0);
    trunc_ln851_fu_165_p1 <= data_0_V_read(3 - 1 downto 0);
    zext_ln446_1_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln445_1_reg_742),64));
    zext_ln446_2_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln445_2_reg_747),64));
    zext_ln446_3_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln445_3_reg_752),64));
    zext_ln446_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln445_reg_737),64));
end behav;
