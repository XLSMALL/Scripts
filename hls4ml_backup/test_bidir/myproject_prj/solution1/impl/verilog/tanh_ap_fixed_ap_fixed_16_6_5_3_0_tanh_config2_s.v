// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] tanh_table1_address0;
reg    tanh_table1_ce0;
wire   [10:0] tanh_table1_q0;
wire   [9:0] tanh_table1_address1;
reg    tanh_table1_ce1;
wire   [10:0] tanh_table1_q1;
wire   [9:0] tanh_table1_address2;
reg    tanh_table1_ce2;
wire   [10:0] tanh_table1_q2;
wire   [9:0] tanh_table1_address3;
reg    tanh_table1_ce3;
wire   [10:0] tanh_table1_q3;
wire   [13:0] select_ln850_fu_197_p3;
reg   [13:0] select_ln850_reg_697;
wire   [12:0] trunc_ln442_fu_205_p1;
reg   [12:0] trunc_ln442_reg_702;
wire   [13:0] select_ln850_1_fu_269_p3;
reg   [13:0] select_ln850_1_reg_707;
wire   [12:0] trunc_ln442_1_fu_277_p1;
reg   [12:0] trunc_ln442_1_reg_712;
wire   [13:0] select_ln850_2_fu_341_p3;
reg   [13:0] select_ln850_2_reg_717;
wire   [12:0] trunc_ln442_2_fu_349_p1;
reg   [12:0] trunc_ln442_2_reg_722;
wire   [13:0] select_ln850_3_fu_413_p3;
reg   [13:0] select_ln850_3_reg_727;
wire   [12:0] trunc_ln442_3_fu_421_p1;
reg   [12:0] trunc_ln442_3_reg_732;
wire   [9:0] select_ln445_fu_471_p3;
reg   [9:0] select_ln445_reg_737;
wire   [9:0] select_ln445_1_fu_525_p3;
reg   [9:0] select_ln445_1_reg_742;
wire   [9:0] select_ln445_2_fu_579_p3;
reg   [9:0] select_ln445_2_reg_747;
wire   [9:0] select_ln445_3_fu_633_p3;
reg   [9:0] select_ln445_3_reg_752;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln446_fu_641_p1;
wire   [63:0] zext_ln446_1_fu_645_p1;
wire   [63:0] zext_ln446_2_fu_649_p1;
wire   [63:0] zext_ln446_3_fu_653_p1;
wire   [12:0] tmp_fu_145_p4;
wire   [25:0] shl_ln_fu_137_p3;
wire   [2:0] trunc_ln851_fu_165_p1;
wire   [9:0] p_Result_2_fu_169_p3;
wire  signed [13:0] sext_ln850_fu_155_p1;
wire   [0:0] icmp_ln851_fu_177_p2;
wire   [13:0] add_ln700_fu_183_p2;
wire   [0:0] icmp_ln850_fu_159_p2;
wire   [13:0] select_ln851_fu_189_p3;
wire   [12:0] tmp_2_fu_217_p4;
wire   [25:0] shl_ln1118_1_fu_209_p3;
wire   [2:0] trunc_ln851_1_fu_237_p1;
wire   [9:0] p_Result_2_1_fu_241_p3;
wire  signed [13:0] sext_ln850_1_fu_227_p1;
wire   [0:0] icmp_ln851_1_fu_249_p2;
wire   [13:0] add_ln700_1_fu_255_p2;
wire   [0:0] icmp_ln850_1_fu_231_p2;
wire   [13:0] select_ln851_1_fu_261_p3;
wire   [12:0] tmp_4_fu_289_p4;
wire   [25:0] shl_ln1118_2_fu_281_p3;
wire   [2:0] trunc_ln851_2_fu_309_p1;
wire   [9:0] p_Result_2_2_fu_313_p3;
wire  signed [13:0] sext_ln850_2_fu_299_p1;
wire   [0:0] icmp_ln851_2_fu_321_p2;
wire   [13:0] add_ln700_2_fu_327_p2;
wire   [0:0] icmp_ln850_2_fu_303_p2;
wire   [13:0] select_ln851_2_fu_333_p3;
wire   [12:0] tmp_6_fu_361_p4;
wire   [25:0] shl_ln1118_3_fu_353_p3;
wire   [2:0] trunc_ln851_3_fu_381_p1;
wire   [9:0] p_Result_2_3_fu_385_p3;
wire  signed [13:0] sext_ln850_3_fu_371_p1;
wire   [0:0] icmp_ln851_3_fu_393_p2;
wire   [13:0] add_ln700_3_fu_399_p2;
wire   [0:0] icmp_ln850_3_fu_375_p2;
wire   [13:0] select_ln851_3_fu_405_p3;
wire   [13:0] add_ln442_fu_425_p2;
wire   [0:0] tmp_1_fu_435_p3;
wire   [12:0] add_ln442_4_fu_430_p2;
wire   [12:0] select_ln444_fu_443_p3;
wire   [2:0] tmp_3_fu_455_p4;
wire   [0:0] icmp_ln445_fu_465_p2;
wire   [9:0] trunc_ln444_fu_451_p1;
wire   [13:0] add_ln442_1_fu_479_p2;
wire   [0:0] tmp_5_fu_489_p3;
wire   [12:0] add_ln442_5_fu_484_p2;
wire   [12:0] select_ln444_1_fu_497_p3;
wire   [2:0] tmp_7_fu_509_p4;
wire   [0:0] icmp_ln445_1_fu_519_p2;
wire   [9:0] trunc_ln444_1_fu_505_p1;
wire   [13:0] add_ln442_2_fu_533_p2;
wire   [0:0] tmp_8_fu_543_p3;
wire   [12:0] add_ln442_6_fu_538_p2;
wire   [12:0] select_ln444_2_fu_551_p3;
wire   [2:0] tmp_9_fu_563_p4;
wire   [0:0] icmp_ln445_2_fu_573_p2;
wire   [9:0] trunc_ln444_2_fu_559_p1;
wire   [13:0] add_ln442_3_fu_587_p2;
wire   [0:0] tmp_10_fu_597_p3;
wire   [12:0] add_ln442_7_fu_592_p2;
wire   [12:0] select_ln444_3_fu_605_p3;
wire   [2:0] tmp_11_fu_617_p4;
wire   [0:0] icmp_ln445_3_fu_627_p2;
wire   [9:0] trunc_ln444_3_fu_613_p1;
wire  signed [15:0] sext_ln703_fu_657_p1;
wire  signed [15:0] sext_ln703_1_fu_661_p1;
wire  signed [15:0] sext_ln703_2_fu_665_p1;
wire  signed [15:0] sext_ln703_3_fu_669_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud #(
    .DataWidth( 11 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tanh_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tanh_table1_address0),
    .ce0(tanh_table1_ce0),
    .q0(tanh_table1_q0),
    .address1(tanh_table1_address1),
    .ce1(tanh_table1_ce1),
    .q1(tanh_table1_q1),
    .address2(tanh_table1_address2),
    .ce2(tanh_table1_ce2),
    .q2(tanh_table1_q2),
    .address3(tanh_table1_address3),
    .ce3(tanh_table1_ce3),
    .q3(tanh_table1_q3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln445_1_reg_742 <= select_ln445_1_fu_525_p3;
        select_ln445_2_reg_747 <= select_ln445_2_fu_579_p3;
        select_ln445_3_reg_752 <= select_ln445_3_fu_633_p3;
        select_ln445_reg_737 <= select_ln445_fu_471_p3;
        select_ln850_1_reg_707 <= select_ln850_1_fu_269_p3;
        select_ln850_2_reg_717 <= select_ln850_2_fu_341_p3;
        select_ln850_3_reg_727 <= select_ln850_3_fu_413_p3;
        select_ln850_reg_697 <= select_ln850_fu_197_p3;
        trunc_ln442_1_reg_712 <= trunc_ln442_1_fu_277_p1;
        trunc_ln442_2_reg_722 <= trunc_ln442_2_fu_349_p1;
        trunc_ln442_3_reg_732 <= trunc_ln442_3_fu_421_p1;
        trunc_ln442_reg_702 <= trunc_ln442_fu_205_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tanh_table1_ce0 = 1'b1;
    end else begin
        tanh_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tanh_table1_ce1 = 1'b1;
    end else begin
        tanh_table1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tanh_table1_ce2 = 1'b1;
    end else begin
        tanh_table1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tanh_table1_ce3 = 1'b1;
    end else begin
        tanh_table1_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln442_1_fu_479_p2 = (14'd512 + select_ln850_1_reg_707);

assign add_ln442_2_fu_533_p2 = (14'd512 + select_ln850_2_reg_717);

assign add_ln442_3_fu_587_p2 = (14'd512 + select_ln850_3_reg_727);

assign add_ln442_4_fu_430_p2 = (13'd512 + trunc_ln442_reg_702);

assign add_ln442_5_fu_484_p2 = (13'd512 + trunc_ln442_1_reg_712);

assign add_ln442_6_fu_538_p2 = (13'd512 + trunc_ln442_2_reg_722);

assign add_ln442_7_fu_592_p2 = (13'd512 + trunc_ln442_3_reg_732);

assign add_ln442_fu_425_p2 = (14'd512 + select_ln850_reg_697);

assign add_ln700_1_fu_255_p2 = ($signed(14'd1) + $signed(sext_ln850_1_fu_227_p1));

assign add_ln700_2_fu_327_p2 = ($signed(14'd1) + $signed(sext_ln850_2_fu_299_p1));

assign add_ln700_3_fu_399_p2 = ($signed(14'd1) + $signed(sext_ln850_3_fu_371_p1));

assign add_ln700_fu_183_p2 = ($signed(14'd1) + $signed(sext_ln850_fu_155_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sext_ln703_fu_657_p1;

assign ap_return_1 = sext_ln703_1_fu_661_p1;

assign ap_return_2 = sext_ln703_2_fu_665_p1;

assign ap_return_3 = sext_ln703_3_fu_669_p1;

assign icmp_ln445_1_fu_519_p2 = ((tmp_7_fu_509_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln445_2_fu_573_p2 = ((tmp_9_fu_563_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln445_3_fu_627_p2 = ((tmp_11_fu_617_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln445_fu_465_p2 = ((tmp_3_fu_455_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_1_fu_231_p2 = (($signed(shl_ln1118_1_fu_209_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_2_fu_303_p2 = (($signed(shl_ln1118_2_fu_281_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_3_fu_375_p2 = (($signed(shl_ln1118_3_fu_353_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_159_p2 = (($signed(shl_ln_fu_137_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_249_p2 = ((p_Result_2_1_fu_241_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_321_p2 = ((p_Result_2_2_fu_313_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_393_p2 = ((p_Result_2_3_fu_385_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_177_p2 = ((p_Result_2_fu_169_p3 == 10'd0) ? 1'b1 : 1'b0);

assign p_Result_2_1_fu_241_p3 = {{trunc_ln851_1_fu_237_p1}, {7'd0}};

assign p_Result_2_2_fu_313_p3 = {{trunc_ln851_2_fu_309_p1}, {7'd0}};

assign p_Result_2_3_fu_385_p3 = {{trunc_ln851_3_fu_381_p1}, {7'd0}};

assign p_Result_2_fu_169_p3 = {{trunc_ln851_fu_165_p1}, {7'd0}};

assign select_ln444_1_fu_497_p3 = ((tmp_5_fu_489_p3[0:0] === 1'b1) ? 13'd0 : add_ln442_5_fu_484_p2);

assign select_ln444_2_fu_551_p3 = ((tmp_8_fu_543_p3[0:0] === 1'b1) ? 13'd0 : add_ln442_6_fu_538_p2);

assign select_ln444_3_fu_605_p3 = ((tmp_10_fu_597_p3[0:0] === 1'b1) ? 13'd0 : add_ln442_7_fu_592_p2);

assign select_ln444_fu_443_p3 = ((tmp_1_fu_435_p3[0:0] === 1'b1) ? 13'd0 : add_ln442_4_fu_430_p2);

assign select_ln445_1_fu_525_p3 = ((icmp_ln445_1_fu_519_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln444_1_fu_505_p1);

assign select_ln445_2_fu_579_p3 = ((icmp_ln445_2_fu_573_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln444_2_fu_559_p1);

assign select_ln445_3_fu_633_p3 = ((icmp_ln445_3_fu_627_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln444_3_fu_613_p1);

assign select_ln445_fu_471_p3 = ((icmp_ln445_fu_465_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln444_fu_451_p1);

assign select_ln850_1_fu_269_p3 = ((icmp_ln850_1_fu_231_p2[0:0] === 1'b1) ? select_ln851_1_fu_261_p3 : sext_ln850_1_fu_227_p1);

assign select_ln850_2_fu_341_p3 = ((icmp_ln850_2_fu_303_p2[0:0] === 1'b1) ? select_ln851_2_fu_333_p3 : sext_ln850_2_fu_299_p1);

assign select_ln850_3_fu_413_p3 = ((icmp_ln850_3_fu_375_p2[0:0] === 1'b1) ? select_ln851_3_fu_405_p3 : sext_ln850_3_fu_371_p1);

assign select_ln850_fu_197_p3 = ((icmp_ln850_fu_159_p2[0:0] === 1'b1) ? select_ln851_fu_189_p3 : sext_ln850_fu_155_p1);

assign select_ln851_1_fu_261_p3 = ((icmp_ln851_1_fu_249_p2[0:0] === 1'b1) ? sext_ln850_1_fu_227_p1 : add_ln700_1_fu_255_p2);

assign select_ln851_2_fu_333_p3 = ((icmp_ln851_2_fu_321_p2[0:0] === 1'b1) ? sext_ln850_2_fu_299_p1 : add_ln700_2_fu_327_p2);

assign select_ln851_3_fu_405_p3 = ((icmp_ln851_3_fu_393_p2[0:0] === 1'b1) ? sext_ln850_3_fu_371_p1 : add_ln700_3_fu_399_p2);

assign select_ln851_fu_189_p3 = ((icmp_ln851_fu_177_p2[0:0] === 1'b1) ? sext_ln850_fu_155_p1 : add_ln700_fu_183_p2);

assign sext_ln703_1_fu_661_p1 = $signed(tanh_table1_q1);

assign sext_ln703_2_fu_665_p1 = $signed(tanh_table1_q2);

assign sext_ln703_3_fu_669_p1 = $signed(tanh_table1_q3);

assign sext_ln703_fu_657_p1 = $signed(tanh_table1_q0);

assign sext_ln850_1_fu_227_p1 = $signed(tmp_2_fu_217_p4);

assign sext_ln850_2_fu_299_p1 = $signed(tmp_4_fu_289_p4);

assign sext_ln850_3_fu_371_p1 = $signed(tmp_6_fu_361_p4);

assign sext_ln850_fu_155_p1 = $signed(tmp_fu_145_p4);

assign shl_ln1118_1_fu_209_p3 = {{data_1_V_read}, {10'd0}};

assign shl_ln1118_2_fu_281_p3 = {{data_2_V_read}, {10'd0}};

assign shl_ln1118_3_fu_353_p3 = {{data_3_V_read}, {10'd0}};

assign shl_ln_fu_137_p3 = {{data_0_V_read}, {10'd0}};

assign tanh_table1_address0 = zext_ln446_fu_641_p1;

assign tanh_table1_address1 = zext_ln446_1_fu_645_p1;

assign tanh_table1_address2 = zext_ln446_2_fu_649_p1;

assign tanh_table1_address3 = zext_ln446_3_fu_653_p1;

assign tmp_10_fu_597_p3 = add_ln442_3_fu_587_p2[32'd13];

assign tmp_11_fu_617_p4 = {{select_ln444_3_fu_605_p3[12:10]}};

assign tmp_1_fu_435_p3 = add_ln442_fu_425_p2[32'd13];

assign tmp_2_fu_217_p4 = {{data_1_V_read[15:3]}};

assign tmp_3_fu_455_p4 = {{select_ln444_fu_443_p3[12:10]}};

assign tmp_4_fu_289_p4 = {{data_2_V_read[15:3]}};

assign tmp_5_fu_489_p3 = add_ln442_1_fu_479_p2[32'd13];

assign tmp_6_fu_361_p4 = {{data_3_V_read[15:3]}};

assign tmp_7_fu_509_p4 = {{select_ln444_1_fu_497_p3[12:10]}};

assign tmp_8_fu_543_p3 = add_ln442_2_fu_533_p2[32'd13];

assign tmp_9_fu_563_p4 = {{select_ln444_2_fu_551_p3[12:10]}};

assign tmp_fu_145_p4 = {{data_0_V_read[15:3]}};

assign trunc_ln442_1_fu_277_p1 = select_ln850_1_fu_269_p3[12:0];

assign trunc_ln442_2_fu_349_p1 = select_ln850_2_fu_341_p3[12:0];

assign trunc_ln442_3_fu_421_p1 = select_ln850_3_fu_413_p3[12:0];

assign trunc_ln442_fu_205_p1 = select_ln850_fu_197_p3[12:0];

assign trunc_ln444_1_fu_505_p1 = select_ln444_1_fu_497_p3[9:0];

assign trunc_ln444_2_fu_559_p1 = select_ln444_2_fu_551_p3[9:0];

assign trunc_ln444_3_fu_613_p1 = select_ln444_3_fu_605_p3[9:0];

assign trunc_ln444_fu_451_p1 = select_ln444_fu_443_p3[9:0];

assign trunc_ln851_1_fu_237_p1 = data_1_V_read[2:0];

assign trunc_ln851_2_fu_309_p1 = data_2_V_read[2:0];

assign trunc_ln851_3_fu_381_p1 = data_3_V_read[2:0];

assign trunc_ln851_fu_165_p1 = data_0_V_read[2:0];

assign zext_ln446_1_fu_645_p1 = select_ln445_1_reg_742;

assign zext_ln446_2_fu_649_p1 = select_ln445_2_reg_747;

assign zext_ln446_3_fu_653_p1 = select_ln445_3_reg_752;

assign zext_ln446_fu_641_p1 = select_ln445_reg_737;

endmodule //tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s
