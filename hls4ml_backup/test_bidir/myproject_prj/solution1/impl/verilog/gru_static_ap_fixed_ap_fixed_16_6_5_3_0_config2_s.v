// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        reset_state,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_pp0_stage0 = 21'd1;
parameter    ap_ST_fsm_pp0_stage1 = 21'd2;
parameter    ap_ST_fsm_pp0_stage2 = 21'd4;
parameter    ap_ST_fsm_pp0_stage3 = 21'd8;
parameter    ap_ST_fsm_pp0_stage4 = 21'd16;
parameter    ap_ST_fsm_pp0_stage5 = 21'd32;
parameter    ap_ST_fsm_pp0_stage6 = 21'd64;
parameter    ap_ST_fsm_pp0_stage7 = 21'd128;
parameter    ap_ST_fsm_pp0_stage8 = 21'd256;
parameter    ap_ST_fsm_pp0_stage9 = 21'd512;
parameter    ap_ST_fsm_pp0_stage10 = 21'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 21'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 21'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 21'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 21'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 21'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 21'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 21'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 21'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 21'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input   reset_state;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
reg   [15:0] h_state_V_0;
reg   [15:0] h_state_V_1;
reg   [15:0] h_state_V_2;
reg   [15:0] h_state_V_3;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state22_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire  signed [15:0] select_ln443_fu_196_p3;
reg  signed [15:0] select_ln443_reg_786;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state23_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [15:0] select_ln443_1_fu_205_p3;
reg  signed [15:0] select_ln443_1_reg_792;
wire  signed [15:0] select_ln443_2_fu_214_p3;
reg  signed [15:0] select_ln443_2_reg_798;
wire  signed [15:0] select_ln443_3_fu_223_p3;
reg  signed [15:0] select_ln443_3_reg_804;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_0;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_1;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_2;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_3;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_4;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_5;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_6;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_7;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_8;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_9;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_10;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_11;
reg   [15:0] call_ret1_reg_810_0;
reg   [15:0] call_ret1_reg_810_1;
reg   [15:0] call_ret1_reg_810_2;
reg   [15:0] call_ret1_reg_810_3;
reg   [15:0] call_ret1_reg_810_4;
reg   [15:0] call_ret1_reg_810_5;
reg   [15:0] call_ret1_reg_810_6;
reg   [15:0] call_ret1_reg_810_7;
reg   [15:0] call_ret1_reg_810_8;
reg   [15:0] call_ret1_reg_810_9;
reg   [15:0] call_ret1_reg_810_10;
reg   [15:0] call_ret1_reg_810_11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_0;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_1;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_2;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_3;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_4;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_5;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_6;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_7;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_8;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_9;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_10;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_11;
reg   [15:0] call_ret_reg_826_0;
reg   [15:0] call_ret_reg_826_1;
reg   [15:0] call_ret_reg_826_2;
reg   [15:0] call_ret_reg_826_3;
reg   [15:0] call_ret_reg_826_4;
reg   [15:0] call_ret_reg_826_5;
reg   [15:0] call_ret_reg_826_6;
reg   [15:0] call_ret_reg_826_7;
reg  signed [15:0] tmpres_state_zr_8_reg_838;
reg  signed [15:0] tmpres_state_zr_9_reg_843;
reg  signed [15:0] tmpres_state_zr_s_reg_848;
reg  signed [15:0] tmpres_state_zr_10_reg_853;
wire   [15:0] inputacc_zr_0_V_fu_296_p2;
reg   [15:0] inputacc_zr_0_V_reg_858;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [15:0] inputacc_zr_1_V_fu_302_p2;
reg   [15:0] inputacc_zr_1_V_reg_863;
wire   [15:0] inputacc_zr_2_V_fu_308_p2;
reg   [15:0] inputacc_zr_2_V_reg_868;
wire   [15:0] inputacc_zr_3_V_fu_314_p2;
reg   [15:0] inputacc_zr_3_V_reg_873;
wire   [15:0] inputacc_zr_4_V_fu_320_p2;
reg   [15:0] inputacc_zr_4_V_reg_878;
wire   [15:0] inputacc_zr_5_V_fu_326_p2;
reg   [15:0] inputacc_zr_5_V_reg_883;
wire   [15:0] inputacc_zr_6_V_fu_332_p2;
reg   [15:0] inputacc_zr_6_V_reg_888;
wire   [15:0] inputacc_zr_7_V_fu_338_p2;
reg   [15:0] inputacc_zr_7_V_reg_893;
reg  signed [15:0] tmpres_zr_reg_898;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg  signed [15:0] tmpres_zr_1_reg_904;
reg  signed [15:0] tmpres_zr_2_reg_910;
reg  signed [15:0] tmpres_zr_3_reg_916;
reg  signed [15:0] tmpres_zr_4_reg_922;
reg  signed [15:0] tmpres_zr_5_reg_927;
reg  signed [15:0] tmpres_zr_6_reg_932;
reg  signed [15:0] tmpres_zr_7_reg_937;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire  signed [25:0] grp_fu_656_p2;
reg  signed [25:0] mul_ln1118_reg_982;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire  signed [25:0] grp_fu_662_p2;
reg  signed [25:0] mul_ln1118_20_reg_987;
wire  signed [25:0] grp_fu_668_p2;
reg  signed [25:0] mul_ln1118_21_reg_992;
wire  signed [25:0] grp_fu_674_p2;
reg  signed [25:0] mul_ln1118_22_reg_997;
wire   [15:0] inputacc_h_0_V_fu_448_p2;
reg   [15:0] inputacc_h_0_V_reg_1002;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [15:0] inputacc_h_1_V_fu_454_p2;
reg   [15:0] inputacc_h_1_V_reg_1007;
wire   [15:0] inputacc_h_2_V_fu_460_p2;
reg   [15:0] inputacc_h_2_V_reg_1012;
wire   [15:0] inputacc_h_3_V_fu_466_p2;
reg   [15:0] inputacc_h_3_V_reg_1017;
reg  signed [15:0] tmpres_h_0_V_reg_1022;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
reg  signed [15:0] tmpres_h_1_V_reg_1027;
reg  signed [15:0] tmpres_h_2_V_reg_1032;
reg  signed [15:0] tmpres_h_3_V_reg_1037;
wire   [16:0] sub_ln1193_fu_491_p2;
reg  signed [16:0] sub_ln1193_reg_1042;
wire   [16:0] sub_ln1193_1_fu_500_p2;
reg  signed [16:0] sub_ln1193_1_reg_1047;
wire   [16:0] sub_ln1193_2_fu_509_p2;
reg  signed [16:0] sub_ln1193_2_reg_1052;
wire   [16:0] sub_ln1193_3_fu_518_p2;
reg  signed [16:0] sub_ln1193_3_reg_1057;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire  signed [25:0] grp_fu_680_p2;
reg  signed [25:0] mul_ln703_reg_1142;
wire  signed [25:0] grp_fu_686_p2;
reg  signed [25:0] mul_ln703_1_reg_1147;
wire  signed [25:0] grp_fu_692_p2;
reg  signed [25:0] mul_ln703_2_reg_1152;
wire  signed [25:0] grp_fu_698_p2;
reg  signed [25:0] mul_ln703_3_reg_1157;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_port_reg_reset_state;
reg    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call19;
wire    ap_block_state22_pp0_stage0_iter1_ignore_call19;
reg    ap_block_pp0_stage0_11001_ignoreCallOp34;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call19;
wire    ap_block_state23_pp0_stage1_iter1_ignore_call19;
wire    ap_block_pp0_stage1_11001_ignoreCallOp44;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call19;
wire    ap_block_pp0_stage2_11001_ignoreCallOp46;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call19;
wire    ap_block_pp0_stage3_11001_ignoreCallOp48;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call19;
wire    ap_block_pp0_stage4_11001_ignoreCallOp50;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call19;
wire    ap_block_pp0_stage5_11001_ignoreCallOp52;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_0_V_read;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_1_V_read;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_2_V_read;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_3_V_read;
reg    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call32;
wire    ap_block_state23_pp0_stage1_iter1_ignore_call32;
wire    ap_block_pp0_stage1_11001_ignoreCallOp45;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call32;
wire    ap_block_pp0_stage2_11001_ignoreCallOp47;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call32;
wire    ap_block_pp0_stage3_11001_ignoreCallOp49;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call32;
wire    ap_block_pp0_stage4_11001_ignoreCallOp51;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call32;
wire    ap_block_pp0_stage5_11001_ignoreCallOp53;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_done;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_idle;
wire    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ready;
reg    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ce;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_0;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_1;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_2;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_3;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_4;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_5;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_6;
wire   [15:0] grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_7;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call53;
wire    ap_block_pp0_stage7_11001_ignoreCallOp82;
wire    ap_block_state9_pp0_stage8_iter0_ignore_call53;
wire    ap_block_pp0_stage8_11001_ignoreCallOp83;
wire    ap_block_state10_pp0_stage9_iter0_ignore_call53;
wire    ap_block_pp0_stage9_11001_ignoreCallOp84;
wire    ap_block_state11_pp0_stage10_iter0_ignore_call53;
wire    ap_block_pp0_stage10_11001_ignoreCallOp85;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_done;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_idle;
wire    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ready;
reg    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ce;
wire   [15:0] grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_0;
wire   [15:0] grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_1;
wire   [15:0] grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_2;
wire   [15:0] grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_3;
wire    ap_block_state16_pp0_stage15_iter0_ignore_call82;
wire    ap_block_pp0_stage15_11001_ignoreCallOp126;
wire    ap_block_state17_pp0_stage16_iter0_ignore_call82;
wire    ap_block_pp0_stage16_11001_ignoreCallOp127;
wire    ap_block_state18_pp0_stage17_iter0_ignore_call82;
wire    ap_block_pp0_stage17_11001_ignoreCallOp128;
wire    ap_block_state19_pp0_stage18_iter0_ignore_call82;
wire    ap_block_pp0_stage18_11001_ignoreCallOp129;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage1;
reg    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
reg    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
reg   [15:0] ap_sig_allocacmp_h_state_V_0_load;
reg   [15:0] ap_sig_allocacmp_h_state_V_1_load;
reg   [15:0] ap_sig_allocacmp_h_state_V_2_load;
reg   [15:0] ap_sig_allocacmp_h_state_V_3_load;
wire   [0:0] select_ln443_fu_196_p0;
wire   [0:0] select_ln443_1_fu_205_p0;
wire   [0:0] select_ln443_2_fu_214_p0;
wire   [0:0] select_ln443_3_fu_223_p0;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage14;
wire   [15:0] trunc_ln_fu_412_p4;
wire   [15:0] trunc_ln708_s_fu_421_p4;
wire   [15:0] trunc_ln708_2_fu_430_p4;
wire   [15:0] trunc_ln708_3_fu_439_p4;
wire  signed [16:0] sext_ln1193_fu_488_p1;
wire  signed [16:0] sext_ln1193_1_fu_497_p1;
wire  signed [16:0] sext_ln1193_2_fu_506_p1;
wire  signed [16:0] sext_ln1193_3_fu_515_p1;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire  signed [25:0] grp_fu_704_p3;
wire  signed [25:0] grp_fu_712_p3;
wire  signed [25:0] grp_fu_720_p3;
wire  signed [25:0] grp_fu_728_p3;
reg    grp_fu_656_ce;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage12;
reg    grp_fu_662_ce;
reg    grp_fu_668_ce;
reg    grp_fu_674_ce;
reg    grp_fu_680_ce;
reg    grp_fu_686_ce;
reg    grp_fu_692_ce;
reg    grp_fu_698_ce;
reg    grp_fu_704_ce;
reg    grp_fu_712_ce;
reg    grp_fu_720_ce;
reg    grp_fu_728_ce;
reg   [20:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_reset_start_pp0;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_subdone;
wire    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 h_state_V_0 = 16'd0;
#0 h_state_V_1 = 16'd0;
#0 h_state_V_2 = 16'd0;
#0 h_state_V_3 = 16'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg = 1'b0;
#0 grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg = 1'b0;
end

dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1 grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_V_read(data_0_V_read),
    .data_1_V_read(data_1_V_read),
    .data_2_V_read(data_2_V_read),
    .data_3_V_read(data_3_V_read),
    .data_4_V_read(data_4_V_read),
    .data_5_V_read(data_5_V_read),
    .data_6_V_read(data_6_V_read),
    .data_7_V_read(data_7_V_read),
    .data_8_V_read(data_8_V_read),
    .data_9_V_read(data_9_V_read),
    .ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_0),
    .ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_1),
    .ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_2),
    .ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_3),
    .ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_4),
    .ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_5),
    .ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_6),
    .ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_7),
    .ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_8),
    .ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_9),
    .ap_return_10(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_10),
    .ap_return_11(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_11),
    .ap_ce(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_ce)
);

dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0 grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_V_read(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_0_V_read),
    .data_1_V_read(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_1_V_read),
    .data_2_V_read(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_2_V_read),
    .data_3_V_read(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_3_V_read),
    .ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_0),
    .ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_1),
    .ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_2),
    .ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_3),
    .ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_4),
    .ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_5),
    .ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_6),
    .ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_7),
    .ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_8),
    .ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_9),
    .ap_return_10(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_10),
    .ap_return_11(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_11),
    .ap_ce(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_ce)
);

sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start),
    .ap_done(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_done),
    .ap_idle(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_idle),
    .ap_ready(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ready),
    .ap_ce(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ce),
    .data_0_V_read(inputacc_zr_0_V_reg_858),
    .data_1_V_read(inputacc_zr_1_V_reg_863),
    .data_2_V_read(inputacc_zr_2_V_reg_868),
    .data_3_V_read(inputacc_zr_3_V_reg_873),
    .data_4_V_read(inputacc_zr_4_V_reg_878),
    .data_5_V_read(inputacc_zr_5_V_reg_883),
    .data_6_V_read(inputacc_zr_6_V_reg_888),
    .data_7_V_read(inputacc_zr_7_V_reg_893),
    .ap_return_0(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_0),
    .ap_return_1(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_1),
    .ap_return_2(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_2),
    .ap_return_3(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_3),
    .ap_return_4(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_4),
    .ap_return_5(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_5),
    .ap_return_6(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_6),
    .ap_return_7(grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_7)
);

tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start),
    .ap_done(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_done),
    .ap_idle(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_idle),
    .ap_ready(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ready),
    .ap_ce(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ce),
    .data_0_V_read(inputacc_h_0_V_reg_1002),
    .data_1_V_read(inputacc_h_1_V_reg_1007),
    .data_2_V_read(inputacc_h_2_V_reg_1012),
    .data_3_V_read(inputacc_h_3_V_reg_1017),
    .ap_return_0(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_0),
    .ap_return_1(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_1),
    .ap_return_2(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_2),
    .ap_return_3(grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_3)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_4_reg_922),
    .din1(tmpres_state_zr_8_reg_838),
    .ce(grp_fu_656_ce),
    .dout(grp_fu_656_p2)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_5_reg_927),
    .din1(tmpres_state_zr_9_reg_843),
    .ce(grp_fu_662_ce),
    .dout(grp_fu_662_p2)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_6_reg_932),
    .din1(tmpres_state_zr_s_reg_848),
    .ce(grp_fu_668_ce),
    .dout(grp_fu_668_p2)
);

myproject_mul_mul_16s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_3_1_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_7_reg_937),
    .din1(tmpres_state_zr_10_reg_853),
    .ce(grp_fu_674_ce),
    .dout(grp_fu_674_p2)
);

myproject_mul_mul_17s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17s_16s_26_3_1_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1193_reg_1042),
    .din1(tmpres_h_0_V_reg_1022),
    .ce(grp_fu_680_ce),
    .dout(grp_fu_680_p2)
);

myproject_mul_mul_17s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17s_16s_26_3_1_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1193_1_reg_1047),
    .din1(tmpres_h_1_V_reg_1027),
    .ce(grp_fu_686_ce),
    .dout(grp_fu_686_p2)
);

myproject_mul_mul_17s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17s_16s_26_3_1_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1193_2_reg_1052),
    .din1(tmpres_h_2_V_reg_1032),
    .ce(grp_fu_692_ce),
    .dout(grp_fu_692_p2)
);

myproject_mul_mul_17s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17s_16s_26_3_1_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1193_3_reg_1057),
    .din1(tmpres_h_3_V_reg_1037),
    .ce(grp_fu_698_ce),
    .dout(grp_fu_698_p2)
);

myproject_mac_muladd_16s_16s_26s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
myproject_mac_muladd_16s_16s_26s_26_3_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_reg_898),
    .din1(select_ln443_reg_786),
    .din2(mul_ln703_reg_1142),
    .ce(grp_fu_704_ce),
    .dout(grp_fu_704_p3)
);

myproject_mac_muladd_16s_16s_26s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
myproject_mac_muladd_16s_16s_26s_26_3_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_1_reg_904),
    .din1(select_ln443_1_reg_792),
    .din2(mul_ln703_1_reg_1147),
    .ce(grp_fu_712_ce),
    .dout(grp_fu_712_p3)
);

myproject_mac_muladd_16s_16s_26s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
myproject_mac_muladd_16s_16s_26s_26_3_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_2_reg_910),
    .din1(select_ln443_2_reg_798),
    .din2(mul_ln703_2_reg_1152),
    .ce(grp_fu_720_ce),
    .dout(grp_fu_720_p3)
);

myproject_mac_muladd_16s_16s_26s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
myproject_mac_muladd_16s_16s_26s_26_3_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmpres_zr_3_reg_916),
    .din1(select_ln443_3_reg_804),
    .din2(mul_ln703_3_reg_1157),
    .ce(grp_fu_728_ce),
    .dout(grp_fu_728_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage20_subdone) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg <= 1'b1;
        end else if ((grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ready == 1'b1)) begin
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg <= 1'b1;
        end else if ((grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ready == 1'b1)) begin
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_reset_state <= reset_state;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        call_ret1_reg_810_0 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_0;
        call_ret1_reg_810_1 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_1;
        call_ret1_reg_810_10 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_10;
        call_ret1_reg_810_11 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_11;
        call_ret1_reg_810_2 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_2;
        call_ret1_reg_810_3 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_3;
        call_ret1_reg_810_4 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_4;
        call_ret1_reg_810_5 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_5;
        call_ret1_reg_810_6 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_6;
        call_ret1_reg_810_7 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_7;
        call_ret1_reg_810_8 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_8;
        call_ret1_reg_810_9 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_return_9;
        call_ret_reg_826_0 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_0;
        call_ret_reg_826_1 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_1;
        call_ret_reg_826_2 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_2;
        call_ret_reg_826_3 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_3;
        call_ret_reg_826_4 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_4;
        call_ret_reg_826_5 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_5;
        call_ret_reg_826_6 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_6;
        call_ret_reg_826_7 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_7;
        tmpres_state_zr_10_reg_853 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_11;
        tmpres_state_zr_8_reg_838 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_8;
        tmpres_state_zr_9_reg_843 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_9;
        tmpres_state_zr_s_reg_848 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        h_state_V_0 <= {{grp_fu_704_p3[25:10]}};
        h_state_V_1 <= {{grp_fu_712_p3[25:10]}};
        h_state_V_2 <= {{grp_fu_720_p3[25:10]}};
        h_state_V_3 <= {{grp_fu_728_p3[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        inputacc_h_0_V_reg_1002 <= inputacc_h_0_V_fu_448_p2;
        inputacc_h_1_V_reg_1007 <= inputacc_h_1_V_fu_454_p2;
        inputacc_h_2_V_reg_1012 <= inputacc_h_2_V_fu_460_p2;
        inputacc_h_3_V_reg_1017 <= inputacc_h_3_V_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        inputacc_zr_0_V_reg_858 <= inputacc_zr_0_V_fu_296_p2;
        inputacc_zr_1_V_reg_863 <= inputacc_zr_1_V_fu_302_p2;
        inputacc_zr_2_V_reg_868 <= inputacc_zr_2_V_fu_308_p2;
        inputacc_zr_3_V_reg_873 <= inputacc_zr_3_V_fu_314_p2;
        inputacc_zr_4_V_reg_878 <= inputacc_zr_4_V_fu_320_p2;
        inputacc_zr_5_V_reg_883 <= inputacc_zr_5_V_fu_326_p2;
        inputacc_zr_6_V_reg_888 <= inputacc_zr_6_V_fu_332_p2;
        inputacc_zr_7_V_reg_893 <= inputacc_zr_7_V_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_ln1118_20_reg_987 <= grp_fu_662_p2;
        mul_ln1118_21_reg_992 <= grp_fu_668_p2;
        mul_ln1118_22_reg_997 <= grp_fu_674_p2;
        mul_ln1118_reg_982 <= grp_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln703_1_reg_1147 <= grp_fu_686_p2;
        mul_ln703_2_reg_1152 <= grp_fu_692_p2;
        mul_ln703_3_reg_1157 <= grp_fu_698_p2;
        mul_ln703_reg_1142 <= grp_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln443_1_reg_792 <= select_ln443_1_fu_205_p3;
        select_ln443_2_reg_798 <= select_ln443_2_fu_214_p3;
        select_ln443_3_reg_804 <= select_ln443_3_fu_223_p3;
        select_ln443_reg_786 <= select_ln443_fu_196_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        sub_ln1193_1_reg_1047 <= sub_ln1193_1_fu_500_p2;
        sub_ln1193_2_reg_1052 <= sub_ln1193_2_fu_509_p2;
        sub_ln1193_3_reg_1057 <= sub_ln1193_3_fu_518_p2;
        sub_ln1193_reg_1042 <= sub_ln1193_fu_491_p2;
        tmpres_h_0_V_reg_1022 <= grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_0;
        tmpres_h_1_V_reg_1027 <= grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_1;
        tmpres_h_2_V_reg_1032 <= grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_2;
        tmpres_h_3_V_reg_1037 <= grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmpres_zr_1_reg_904 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_1;
        tmpres_zr_2_reg_910 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_2;
        tmpres_zr_3_reg_916 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_3;
        tmpres_zr_4_reg_922 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_4;
        tmpres_zr_5_reg_927 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_5;
        tmpres_zr_6_reg_932 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_6;
        tmpres_zr_7_reg_937 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_7;
        tmpres_zr_reg_898 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_return_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_start_pp0 = 1'b1;
    end else begin
        ap_reset_start_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_h_state_V_0_load = {{grp_fu_704_p3[25:10]}};
    end else begin
        ap_sig_allocacmp_h_state_V_0_load = h_state_V_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_h_state_V_1_load = {{grp_fu_712_p3[25:10]}};
    end else begin
        ap_sig_allocacmp_h_state_V_1_load = h_state_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_h_state_V_2_load = {{grp_fu_720_p3[25:10]}};
    end else begin
        ap_sig_allocacmp_h_state_V_2_load = h_state_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_h_state_V_3_load = {{grp_fu_728_p3[25:10]}};
    end else begin
        ap_sig_allocacmp_h_state_V_3_load = h_state_V_3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp50) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp48) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp46) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp34) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp52) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp44) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_124_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp51) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp49) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp47) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp53) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp45) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))))) begin
        grp_fu_656_ce = 1'b1;
    end else begin
        grp_fu_656_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))))) begin
        grp_fu_662_ce = 1'b1;
    end else begin
        grp_fu_662_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))))) begin
        grp_fu_668_ce = 1'b1;
    end else begin
        grp_fu_668_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))))) begin
        grp_fu_674_ce = 1'b1;
    end else begin
        grp_fu_674_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))))) begin
        grp_fu_680_ce = 1'b1;
    end else begin
        grp_fu_680_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))))) begin
        grp_fu_686_ce = 1'b1;
    end else begin
        grp_fu_686_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))))) begin
        grp_fu_692_ce = 1'b1;
    end else begin
        grp_fu_692_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))))) begin
        grp_fu_698_ce = 1'b1;
    end else begin
        grp_fu_698_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_704_ce = 1'b1;
    end else begin
        grp_fu_704_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_712_ce = 1'b1;
    end else begin
        grp_fu_712_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_720_ce = 1'b1;
    end else begin
        grp_fu_720_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_728_ce = 1'b1;
    end else begin
        grp_fu_728_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp84) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp83) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp82) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp85) & (1'b1 == ap_CS_fsm_pp0_stage10))))) begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ce = 1'b1;
    end else begin
        grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp128) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp127) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp126) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp129) & (1'b1 == ap_CS_fsm_pp0_stage18))))) begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ce = 1'b1;
    end else begin
        grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_start_pp0 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_start_pp0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp34 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp85 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001_ignoreCallOp126 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage16_11001_ignoreCallOp127 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001_ignoreCallOp128 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001_ignoreCallOp129 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp44 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp45 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2_11001_ignoreCallOp46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp47 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage3_11001_ignoreCallOp48 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp49 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage4_11001_ignoreCallOp50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp51 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp52 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp53 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp82 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage8_11001_ignoreCallOp83 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_ignoreCallOp84 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0_ignore_call53 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0_ignore_call53 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0_ignore_call82 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0_ignore_call82 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0_ignore_call82 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0_ignore_call82 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call19 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter1_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter1_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter1_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call32 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call53 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0_ignore_call53 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = {{grp_fu_704_p3[25:10]}};

assign ap_return_1 = {{grp_fu_712_p3[25:10]}};

assign ap_return_2 = {{grp_fu_720_p3[25:10]}};

assign ap_return_3 = {{grp_fu_728_p3[25:10]}};

assign grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_0_V_read = ((select_ln443_fu_196_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_0_load);

assign grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_1_V_read = ((select_ln443_1_fu_205_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_1_load);

assign grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_2_V_read = ((select_ln443_2_fu_214_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_2_load);

assign grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_148_data_3_V_read = ((select_ln443_3_fu_223_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_3_load);

assign grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start = grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_156_ap_start_reg;

assign grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start = grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_170_ap_start_reg;

assign inputacc_h_0_V_fu_448_p2 = (call_ret1_reg_810_8 + trunc_ln_fu_412_p4);

assign inputacc_h_1_V_fu_454_p2 = (call_ret1_reg_810_9 + trunc_ln708_s_fu_421_p4);

assign inputacc_h_2_V_fu_460_p2 = (call_ret1_reg_810_10 + trunc_ln708_2_fu_430_p4);

assign inputacc_h_3_V_fu_466_p2 = (call_ret1_reg_810_11 + trunc_ln708_3_fu_439_p4);

assign inputacc_zr_0_V_fu_296_p2 = (call_ret1_reg_810_0 + call_ret_reg_826_0);

assign inputacc_zr_1_V_fu_302_p2 = (call_ret1_reg_810_1 + call_ret_reg_826_1);

assign inputacc_zr_2_V_fu_308_p2 = (call_ret1_reg_810_2 + call_ret_reg_826_2);

assign inputacc_zr_3_V_fu_314_p2 = (call_ret1_reg_810_3 + call_ret_reg_826_3);

assign inputacc_zr_4_V_fu_320_p2 = (call_ret1_reg_810_4 + call_ret_reg_826_4);

assign inputacc_zr_5_V_fu_326_p2 = (call_ret1_reg_810_5 + call_ret_reg_826_5);

assign inputacc_zr_6_V_fu_332_p2 = (call_ret1_reg_810_6 + call_ret_reg_826_6);

assign inputacc_zr_7_V_fu_338_p2 = (call_ret1_reg_810_7 + call_ret_reg_826_7);

assign select_ln443_1_fu_205_p0 = ap_port_reg_reset_state;

assign select_ln443_1_fu_205_p3 = ((select_ln443_1_fu_205_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_1_load);

assign select_ln443_2_fu_214_p0 = ap_port_reg_reset_state;

assign select_ln443_2_fu_214_p3 = ((select_ln443_2_fu_214_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_2_load);

assign select_ln443_3_fu_223_p0 = ap_port_reg_reset_state;

assign select_ln443_3_fu_223_p3 = ((select_ln443_3_fu_223_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_3_load);

assign select_ln443_fu_196_p0 = ap_port_reg_reset_state;

assign select_ln443_fu_196_p3 = ((select_ln443_fu_196_p0[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_h_state_V_0_load);

assign sext_ln1193_1_fu_497_p1 = tmpres_zr_1_reg_904;

assign sext_ln1193_2_fu_506_p1 = tmpres_zr_2_reg_910;

assign sext_ln1193_3_fu_515_p1 = tmpres_zr_3_reg_916;

assign sext_ln1193_fu_488_p1 = tmpres_zr_reg_898;

assign sub_ln1193_1_fu_500_p2 = ($signed(17'd1024) - $signed(sext_ln1193_1_fu_497_p1));

assign sub_ln1193_2_fu_509_p2 = ($signed(17'd1024) - $signed(sext_ln1193_2_fu_506_p1));

assign sub_ln1193_3_fu_518_p2 = ($signed(17'd1024) - $signed(sext_ln1193_3_fu_515_p1));

assign sub_ln1193_fu_491_p2 = ($signed(17'd1024) - $signed(sext_ln1193_fu_488_p1));

assign trunc_ln708_2_fu_430_p4 = {{mul_ln1118_21_reg_992[25:10]}};

assign trunc_ln708_3_fu_439_p4 = {{mul_ln1118_22_reg_997[25:10]}};

assign trunc_ln708_s_fu_421_p4 = {{mul_ln1118_20_reg_987[25:10]}};

assign trunc_ln_fu_412_p4 = {{mul_ln1118_reg_982[25:10]}};

endmodule //gru_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s
